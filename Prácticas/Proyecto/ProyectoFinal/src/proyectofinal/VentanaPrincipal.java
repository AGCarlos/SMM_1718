/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectofinal;

import com.github.sarxos.webcam.Webcam;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Transparency;
import java.awt.color.ColorSpace;
import java.awt.geom.AffineTransform;
import java.awt.geom.Rectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.ColorConvertOp;
import java.awt.image.ColorModel;
import java.awt.image.ComponentColorModel;
import java.awt.image.ConvolveOp;
import java.awt.image.DataBuffer;
import java.awt.image.Kernel;
import java.awt.image.LookupOp;
import java.awt.image.LookupTable;
import java.awt.image.RescaleOp;
import java.awt.image.WritableRaster;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import sm.cag.image.MusgoOp;
import sm.cag.image.SepiaOp;
import sm.cag.image.SimplyRGBOp;
import sm.cag.image.SpookyOp;
import sm.cag.image.imageUtility;
import sm.image.KernelProducer;
import sm.image.LookupTableProducer;
import sm.sound.SMClipPlayer;
import sm.sound.SMPlayer;
import sm.sound.SMRecorder;
import sm.sound.SMSoundRecorder;

/**
 *
 * @author PC
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    private BufferedImage imgOrigen;

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
        this.setTitle("Proyecto Final SMM");
    }

    //Atributos
    int a = 0, b = 0, c = 0, d = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jColorChooser1 = new javax.swing.JColorChooser();
        PanelInferior = new javax.swing.JPanel();
        PanelConjunto = new javax.swing.JPanel();
        PanelEstado = new javax.swing.JPanel();
        EtiquetaForma = new javax.swing.JLabel();
        EtiquetaValorRGB = new javax.swing.JLabel();
        BarraEfectos = new javax.swing.JToolBar();
        SliderBrillo = new javax.swing.JSlider();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        ComboBoxFiltros = new javax.swing.JComboBox<>();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        BottonContraste1 = new javax.swing.JButton();
        BotonContraste2 = new javax.swing.JButton();
        BotonContraste3 = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JToolBar.Separator();
        BotonSeno2 = new javax.swing.JButton();
        BotonSepia = new javax.swing.JButton();
        BotonSimplyRGB = new javax.swing.JButton();
        BotonMusgo = new javax.swing.JButton();
        BotonSpookyOp = new javax.swing.JButton();
        BotonDuplicar = new javax.swing.JButton();
        BotonNegativo = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        ComboBoxEspacioColor1 = new javax.swing.JComboBox<>();
        BotonBandas1 = new javax.swing.JButton();
        jSeparator9 = new javax.swing.JToolBar.Separator();
        SliderRotacion = new javax.swing.JSlider();
        BotonRotacion90 = new javax.swing.JButton();
        BotonRotacion180 = new javax.swing.JButton();
        BotonRotacion270 = new javax.swing.JButton();
        jSeparator10 = new javax.swing.JToolBar.Separator();
        BotonMasEscala = new javax.swing.JButton();
        BotonMenosEscala = new javax.swing.JButton();
        BarraHerramientas = new javax.swing.JToolBar();
        HerramientasBotonNuevo = new javax.swing.JButton();
        BotonAbrir = new javax.swing.JButton();
        BotonGuardar = new javax.swing.JButton();
        jSeparator14 = new javax.swing.JToolBar.Separator();
        BotonLinea = new javax.swing.JToggleButton();
        BotonRectangulo = new javax.swing.JToggleButton();
        BotonOvalo = new javax.swing.JToggleButton();
        BotonCurva = new javax.swing.JToggleButton();
        BotonTrazoLibre = new javax.swing.JToggleButton();
        BotonArea = new javax.swing.JToggleButton();
        jSeparator13 = new javax.swing.JToolBar.Separator();
        BotonSeleccion = new javax.swing.JToggleButton();
        BotonTraerAdelante = new javax.swing.JButton();
        BotonEnviarAtras = new javax.swing.JButton();
        BotonTraerAlFrente = new javax.swing.JButton();
        BotonEnviarAlFondo = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        PanelColores = new javax.swing.JPanel();
        BotonNegro = new javax.swing.JToggleButton();
        BotonRojo = new javax.swing.JToggleButton();
        BotonAmarillo = new javax.swing.JToggleButton();
        BotonAzul = new javax.swing.JToggleButton();
        BotonVerde = new javax.swing.JToggleButton();
        BotonRojo6 = new javax.swing.JToggleButton();
        BotonSelectorRelleno = new javax.swing.JButton();
        BotonSelectorTrazo = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        BotonRelleno = new javax.swing.JToggleButton();
        BotonRellenoGrandiente = new javax.swing.JToggleButton();
        BotonGrandienteHorizontal = new javax.swing.JToggleButton();
        BotonGrandienteVertical = new javax.swing.JToggleButton();
        jSeparator12 = new javax.swing.JToolBar.Separator();
        BotonAlisado = new javax.swing.JToggleButton();
        SliderTransparencia = new javax.swing.JSlider();
        jSeparator11 = new javax.swing.JToolBar.Separator();
        SpinnerGrosor = new javax.swing.JSpinner();
        ComboBoxTrazos = new javax.swing.JComboBox<>();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        BotonPlay = new javax.swing.JButton();
        BotonPause = new javax.swing.JButton();
        ListaReproduccion = new javax.swing.JComboBox<>();
        BotonGrabar = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        BotonCamara = new javax.swing.JButton();
        BotonCaptura = new javax.swing.JButton();
        escritorio = new javax.swing.JDesktopPane();
        BarraMenu = new javax.swing.JMenuBar();
        MenuArchivo = new javax.swing.JMenu();
        MenuArchivoNuevo = new javax.swing.JMenuItem();
        MenuArchivoAbrir = new javax.swing.JMenuItem();
        MenuArchivoGuardar = new javax.swing.JMenuItem();
        MenuVer = new javax.swing.JMenu();
        MenuVerBarraHerramientas = new javax.swing.JMenuItem();
        MenuVerBarraEfectos = new javax.swing.JMenuItem();
        MenuVerBarraEstado = new javax.swing.JMenuItem();
        MenuAyuda = new javax.swing.JMenu();
        MenuAyudaAcercaDe = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PanelInferior.setLayout(new java.awt.BorderLayout());

        PanelConjunto.setLayout(new java.awt.BorderLayout());

        PanelEstado.setLayout(new javax.swing.BoxLayout(PanelEstado, javax.swing.BoxLayout.LINE_AXIS));

        EtiquetaForma.setText("Forma ");
        PanelEstado.add(EtiquetaForma);

        EtiquetaValorRGB.setText("Coordenadas y valor de pixel");
        PanelEstado.add(EtiquetaValorRGB);

        PanelConjunto.add(PanelEstado, java.awt.BorderLayout.PAGE_END);

        BarraEfectos.setRollover(true);

        SliderBrillo.setMaximum(255);
        SliderBrillo.setMinimum(-255);
        SliderBrillo.setToolTipText("Brillo");
        SliderBrillo.setValue(0);
        SliderBrillo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderBrilloStateChanged(evt);
            }
        });
        SliderBrillo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SliderBrilloFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                SliderBrilloFocusLost(evt);
            }
        });
        BarraEfectos.add(SliderBrillo);
        BarraEfectos.add(jSeparator4);

        ComboBoxFiltros.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Media", "Binomial", "Enfoque", "Relieve", "Laplaciano" }));
        ComboBoxFiltros.setToolTipText("Filtros");
        ComboBoxFiltros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxFiltrosActionPerformed(evt);
            }
        });
        BarraEfectos.add(ComboBoxFiltros);
        BarraEfectos.add(jSeparator5);

        BottonContraste1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/contraste.png"))); // NOI18N
        BottonContraste1.setToolTipText("Contraste");
        BottonContraste1.setFocusable(false);
        BottonContraste1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BottonContraste1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BottonContraste1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonContraste1ActionPerformed(evt);
            }
        });
        BarraEfectos.add(BottonContraste1);

        BotonContraste2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/iluminar.png"))); // NOI18N
        BotonContraste2.setToolTipText("Aclarar");
        BotonContraste2.setFocusable(false);
        BotonContraste2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonContraste2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonContraste2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonContraste2ActionPerformed(evt);
            }
        });
        BarraEfectos.add(BotonContraste2);

        BotonContraste3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/oscurecer.png"))); // NOI18N
        BotonContraste3.setToolTipText("Oscurecer");
        BotonContraste3.setFocusable(false);
        BotonContraste3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonContraste3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonContraste3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonContraste3ActionPerformed(evt);
            }
        });
        BarraEfectos.add(BotonContraste3);
        BarraEfectos.add(jSeparator7);

        BotonSeno2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/seno.png"))); // NOI18N
        BotonSeno2.setToolTipText("Seno");
        BotonSeno2.setFocusable(false);
        BotonSeno2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonSeno2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonSeno2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSeno2ActionPerformed(evt);
            }
        });
        BarraEfectos.add(BotonSeno2);

        BotonSepia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/sepia.png"))); // NOI18N
        BotonSepia.setToolTipText("Sepia");
        BotonSepia.setFocusable(false);
        BotonSepia.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonSepia.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonSepia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSepiaActionPerformed(evt);
            }
        });
        BarraEfectos.add(BotonSepia);

        BotonSimplyRGB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/lel.png"))); // NOI18N
        BotonSimplyRGB.setToolTipText("SimplyRGB");
        BotonSimplyRGB.setFocusable(false);
        BotonSimplyRGB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonSimplyRGB.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonSimplyRGB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSimplyRGBActionPerformed(evt);
            }
        });
        BarraEfectos.add(BotonSimplyRGB);

        BotonMusgo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/musgo.png"))); // NOI18N
        BotonMusgo.setToolTipText("Musgo");
        BotonMusgo.setFocusable(false);
        BotonMusgo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonMusgo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonMusgo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonMusgoActionPerformed(evt);
            }
        });
        BarraEfectos.add(BotonMusgo);

        BotonSpookyOp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/spooky.png"))); // NOI18N
        BotonSpookyOp.setToolTipText("Spooky");
        BotonSpookyOp.setFocusable(false);
        BotonSpookyOp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonSpookyOp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonSpookyOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSpookyOpActionPerformed(evt);
            }
        });
        BarraEfectos.add(BotonSpookyOp);

        BotonDuplicar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/duplicar.png"))); // NOI18N
        BotonDuplicar.setToolTipText("Duplicar");
        BotonDuplicar.setFocusable(false);
        BotonDuplicar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonDuplicar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonDuplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonDuplicarActionPerformed(evt);
            }
        });
        BarraEfectos.add(BotonDuplicar);

        BotonNegativo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/negativo.png"))); // NOI18N
        BotonNegativo.setToolTipText("Negativo");
        BotonNegativo.setFocusable(false);
        BotonNegativo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonNegativo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonNegativo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonNegativoActionPerformed(evt);
            }
        });
        BarraEfectos.add(BotonNegativo);
        BarraEfectos.add(jSeparator8);

        ComboBoxEspacioColor1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "sRGB", "YCC", "Grey" }));
        ComboBoxEspacioColor1.setToolTipText("Cambiar espacio de color");
        ComboBoxEspacioColor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxEspacioColor1ActionPerformed(evt);
            }
        });
        BarraEfectos.add(ComboBoxEspacioColor1);

        BotonBandas1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/bandas.png"))); // NOI18N
        BotonBandas1.setToolTipText("Extraer bandas de color");
        BotonBandas1.setFocusable(false);
        BotonBandas1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonBandas1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonBandas1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonBandas1ActionPerformed(evt);
            }
        });
        BarraEfectos.add(BotonBandas1);
        BarraEfectos.add(jSeparator9);

        SliderRotacion.setMaximum(360);
        SliderRotacion.setMinorTickSpacing(50);
        SliderRotacion.setPaintTicks(true);
        SliderRotacion.setToolTipText("Girar");
        SliderRotacion.setValue(0);
        SliderRotacion.setPreferredSize(new java.awt.Dimension(100, 31));
        SliderRotacion.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderRotacionStateChanged(evt);
            }
        });
        SliderRotacion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SliderRotacionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                SliderRotacionFocusLost(evt);
            }
        });
        BarraEfectos.add(SliderRotacion);

        BotonRotacion90.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rotacion90.png"))); // NOI18N
        BotonRotacion90.setToolTipText("Girar 90º");
        BotonRotacion90.setFocusable(false);
        BotonRotacion90.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonRotacion90.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonRotacion90.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRotacion90ActionPerformed(evt);
            }
        });
        BarraEfectos.add(BotonRotacion90);

        BotonRotacion180.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rotacion180.png"))); // NOI18N
        BotonRotacion180.setToolTipText("Girar 180º");
        BotonRotacion180.setFocusable(false);
        BotonRotacion180.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonRotacion180.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonRotacion180.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRotacion180ActionPerformed(evt);
            }
        });
        BarraEfectos.add(BotonRotacion180);

        BotonRotacion270.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rotacion270.png"))); // NOI18N
        BotonRotacion270.setToolTipText("Girar 270º");
        BotonRotacion270.setFocusable(false);
        BotonRotacion270.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonRotacion270.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonRotacion270.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRotacion270ActionPerformed(evt);
            }
        });
        BarraEfectos.add(BotonRotacion270);
        BarraEfectos.add(jSeparator10);

        BotonMasEscala.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/zoom-in.png"))); // NOI18N
        BotonMasEscala.setToolTipText("Aumentar zoom");
        BotonMasEscala.setFocusable(false);
        BotonMasEscala.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonMasEscala.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonMasEscala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonMasEscalaActionPerformed(evt);
            }
        });
        BarraEfectos.add(BotonMasEscala);

        BotonMenosEscala.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/zoom-out.png"))); // NOI18N
        BotonMenosEscala.setToolTipText("Disminuir zoom");
        BotonMenosEscala.setFocusable(false);
        BotonMenosEscala.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonMenosEscala.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonMenosEscala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonMenosEscalaActionPerformed(evt);
            }
        });
        BarraEfectos.add(BotonMenosEscala);

        PanelConjunto.add(BarraEfectos, java.awt.BorderLayout.PAGE_START);

        PanelInferior.add(PanelConjunto, java.awt.BorderLayout.CENTER);

        getContentPane().add(PanelInferior, java.awt.BorderLayout.PAGE_END);

        BarraHerramientas.setRollover(true);

        HerramientasBotonNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/nuevo.png"))); // NOI18N
        HerramientasBotonNuevo.setToolTipText("Abrir nuevo lienzo en blanco");
        HerramientasBotonNuevo.setFocusable(false);
        HerramientasBotonNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        HerramientasBotonNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        HerramientasBotonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HerramientasBotonNuevoActionPerformed(evt);
            }
        });
        BarraHerramientas.add(HerramientasBotonNuevo);

        BotonAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/abrir.png"))); // NOI18N
        BotonAbrir.setToolTipText("Abrir imagen, sonido o video");
        BotonAbrir.setFocusable(false);
        BotonAbrir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonAbrir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAbrirActionPerformed(evt);
            }
        });
        BarraHerramientas.add(BotonAbrir);

        BotonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/guardar.png"))); // NOI18N
        BotonGuardar.setToolTipText("Guardar estado de la ventana");
        BotonGuardar.setFocusable(false);
        BotonGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonGuardarActionPerformed(evt);
            }
        });
        BarraHerramientas.add(BotonGuardar);
        BarraHerramientas.add(jSeparator14);

        BotonLinea.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/linea.png"))); // NOI18N
        BotonLinea.setToolTipText("Linea");
        BotonLinea.setFocusable(false);
        BotonLinea.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonLinea.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonLinea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonLineaActionPerformed(evt);
            }
        });
        BarraHerramientas.add(BotonLinea);

        BotonRectangulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rectangulo.png"))); // NOI18N
        BotonRectangulo.setToolTipText("Rectángulo");
        BotonRectangulo.setFocusable(false);
        BotonRectangulo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonRectangulo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonRectangulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRectanguloActionPerformed(evt);
            }
        });
        BarraHerramientas.add(BotonRectangulo);

        BotonOvalo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/elipse.png"))); // NOI18N
        BotonOvalo.setToolTipText("Óvalo");
        BotonOvalo.setFocusable(false);
        BotonOvalo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonOvalo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonOvalo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonOvaloActionPerformed(evt);
            }
        });
        BarraHerramientas.add(BotonOvalo);

        BotonCurva.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/curva.png"))); // NOI18N
        BotonCurva.setToolTipText("Curva");
        BotonCurva.setFocusable(false);
        BotonCurva.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonCurva.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonCurva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCurvaActionPerformed(evt);
            }
        });
        BarraHerramientas.add(BotonCurva);

        BotonTrazoLibre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/trazolibre.png"))); // NOI18N
        BotonTrazoLibre.setToolTipText("Trazo libre");
        BotonTrazoLibre.setFocusable(false);
        BotonTrazoLibre.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonTrazoLibre.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonTrazoLibre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonTrazoLibreActionPerformed(evt);
            }
        });
        BarraHerramientas.add(BotonTrazoLibre);

        BotonArea.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/libre.png"))); // NOI18N
        BotonArea.setToolTipText("Área");
        BotonArea.setFocusable(false);
        BotonArea.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonArea.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAreaActionPerformed(evt);
            }
        });
        BarraHerramientas.add(BotonArea);
        BarraHerramientas.add(jSeparator13);

        BotonSeleccion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/seleccion.png"))); // NOI18N
        BotonSeleccion.setToolTipText("Selección");
        BotonSeleccion.setFocusable(false);
        BotonSeleccion.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonSeleccion.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonSeleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSeleccionActionPerformed(evt);
            }
        });
        BarraHerramientas.add(BotonSeleccion);

        BotonTraerAdelante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/traerAdelante.png"))); // NOI18N
        BotonTraerAdelante.setToolTipText("Traer adelante");
        BotonTraerAdelante.setFocusable(false);
        BotonTraerAdelante.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonTraerAdelante.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonTraerAdelante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonTraerAdelanteActionPerformed(evt);
            }
        });
        BarraHerramientas.add(BotonTraerAdelante);

        BotonEnviarAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/enviarAtras.png"))); // NOI18N
        BotonEnviarAtras.setToolTipText("Enviar atrás");
        BotonEnviarAtras.setFocusable(false);
        BotonEnviarAtras.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonEnviarAtras.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonEnviarAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonEnviarAtrasActionPerformed(evt);
            }
        });
        BarraHerramientas.add(BotonEnviarAtras);

        BotonTraerAlFrente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/traerFrente.png"))); // NOI18N
        BotonTraerAlFrente.setToolTipText("Traer al frente");
        BotonTraerAlFrente.setFocusable(false);
        BotonTraerAlFrente.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonTraerAlFrente.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonTraerAlFrente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonTraerAlFrenteActionPerformed(evt);
            }
        });
        BarraHerramientas.add(BotonTraerAlFrente);

        BotonEnviarAlFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/enviarFondo.png"))); // NOI18N
        BotonEnviarAlFondo.setToolTipText("Enviar al fondo");
        BotonEnviarAlFondo.setFocusable(false);
        BotonEnviarAlFondo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonEnviarAlFondo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonEnviarAlFondo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonEnviarAlFondoActionPerformed(evt);
            }
        });
        BarraHerramientas.add(BotonEnviarAlFondo);
        BarraHerramientas.add(jSeparator1);

        PanelColores.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        BotonNegro.setBackground(new java.awt.Color(0, 0, 0));
        BotonNegro.setToolTipText("Negro");
        BotonNegro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonNegroActionPerformed(evt);
            }
        });

        BotonRojo.setBackground(new java.awt.Color(204, 0, 51));
        BotonRojo.setForeground(new java.awt.Color(255, 0, 51));
        BotonRojo.setToolTipText("Rojo");
        BotonRojo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRojoActionPerformed(evt);
            }
        });

        BotonAmarillo.setBackground(new java.awt.Color(255, 255, 51));
        BotonAmarillo.setForeground(new java.awt.Color(255, 255, 51));
        BotonAmarillo.setToolTipText("Amarillo");
        BotonAmarillo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAmarilloActionPerformed(evt);
            }
        });

        BotonAzul.setBackground(new java.awt.Color(0, 102, 255));
        BotonAzul.setForeground(new java.awt.Color(0, 102, 255));
        BotonAzul.setToolTipText("Azul");
        BotonAzul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAzulActionPerformed(evt);
            }
        });

        BotonVerde.setBackground(new java.awt.Color(51, 255, 51));
        BotonVerde.setForeground(new java.awt.Color(51, 255, 51));
        BotonVerde.setToolTipText("Verde");
        BotonVerde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonVerdeActionPerformed(evt);
            }
        });

        BotonRojo6.setBackground(new java.awt.Color(255, 255, 255));
        BotonRojo6.setForeground(new java.awt.Color(255, 255, 255));
        BotonRojo6.setToolTipText("Blanco");
        BotonRojo6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRojo6ActionPerformed(evt);
            }
        });

        BotonSelectorRelleno.setBackground(new java.awt.Color(0, 0, 0));
        BotonSelectorRelleno.setForeground(new java.awt.Color(255, 255, 255));
        BotonSelectorRelleno.setToolTipText("Color del relleno");
        BotonSelectorRelleno.setFocusable(false);
        BotonSelectorRelleno.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonSelectorRelleno.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonSelectorRelleno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSelectorRellenoActionPerformed(evt);
            }
        });

        BotonSelectorTrazo.setBackground(new java.awt.Color(0, 0, 0));
        BotonSelectorTrazo.setForeground(new java.awt.Color(255, 255, 255));
        BotonSelectorTrazo.setToolTipText("Color del trazo");
        BotonSelectorTrazo.setFocusable(false);
        BotonSelectorTrazo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonSelectorTrazo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonSelectorTrazo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSelectorTrazoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelColoresLayout = new javax.swing.GroupLayout(PanelColores);
        PanelColores.setLayout(PanelColoresLayout);
        PanelColoresLayout.setHorizontalGroup(
            PanelColoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelColoresLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(BotonNegro, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonRojo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonAmarillo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonAzul, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonVerde, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonRojo6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonSelectorRelleno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonSelectorTrazo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        PanelColoresLayout.setVerticalGroup(
            PanelColoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelColoresLayout.createSequentialGroup()
                .addGroup(PanelColoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BotonNegro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(BotonRojo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BotonAmarillo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BotonAzul, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BotonVerde, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BotonRojo6, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(BotonSelectorTrazo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BotonSelectorRelleno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );

        BarraHerramientas.add(PanelColores);
        BarraHerramientas.add(jSeparator3);

        BotonRelleno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/relleno.png"))); // NOI18N
        BotonRelleno.setToolTipText("Relleno");
        BotonRelleno.setFocusable(false);
        BotonRelleno.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonRelleno.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonRelleno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRellenoActionPerformed(evt);
            }
        });
        BarraHerramientas.add(BotonRelleno);

        BotonRellenoGrandiente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rellenoGrand.png"))); // NOI18N
        BotonRellenoGrandiente.setToolTipText("Grandiente");
        BotonRellenoGrandiente.setFocusable(false);
        BotonRellenoGrandiente.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonRellenoGrandiente.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonRellenoGrandiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRellenoGrandienteActionPerformed(evt);
            }
        });
        BarraHerramientas.add(BotonRellenoGrandiente);

        BotonGrandienteHorizontal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/horizontal.png"))); // NOI18N
        BotonGrandienteHorizontal.setToolTipText("Grandiente horizontal");
        BotonGrandienteHorizontal.setFocusable(false);
        BotonGrandienteHorizontal.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonGrandienteHorizontal.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonGrandienteHorizontal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonGrandienteHorizontalActionPerformed(evt);
            }
        });
        BarraHerramientas.add(BotonGrandienteHorizontal);

        BotonGrandienteVertical.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/vertical.png"))); // NOI18N
        BotonGrandienteVertical.setToolTipText("Grandiente vertical");
        BotonGrandienteVertical.setFocusable(false);
        BotonGrandienteVertical.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonGrandienteVertical.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonGrandienteVertical.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonGrandienteVerticalActionPerformed(evt);
            }
        });
        BarraHerramientas.add(BotonGrandienteVertical);
        BarraHerramientas.add(jSeparator12);

        BotonAlisado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/alisar.png"))); // NOI18N
        BotonAlisado.setToolTipText("Alisado");
        BotonAlisado.setFocusable(false);
        BotonAlisado.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonAlisado.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonAlisado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAlisadoActionPerformed(evt);
            }
        });
        BarraHerramientas.add(BotonAlisado);

        SliderTransparencia.setMaximum(10);
        SliderTransparencia.setMinorTickSpacing(1);
        SliderTransparencia.setPaintTicks(true);
        SliderTransparencia.setToolTipText("Transparencia");
        SliderTransparencia.setInverted(true);
        SliderTransparencia.setPreferredSize(new java.awt.Dimension(100, 23));
        SliderTransparencia.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderTransparenciaStateChanged(evt);
            }
        });
        BarraHerramientas.add(SliderTransparencia);
        BarraHerramientas.add(jSeparator11);

        SpinnerGrosor.setModel(new javax.swing.SpinnerNumberModel(1, 1, 50, 1));
        SpinnerGrosor.setToolTipText("Grosor");
        SpinnerGrosor.setValue(1);
        SpinnerGrosor.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SpinnerGrosorStateChanged(evt);
            }
        });
        BarraHerramientas.add(SpinnerGrosor);

        ComboBoxTrazos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Continuo", "Discontinuo", "Punteado" }));
        ComboBoxTrazos.setToolTipText("Tipo de trazo");
        ComboBoxTrazos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxTrazosActionPerformed(evt);
            }
        });
        BarraHerramientas.add(ComboBoxTrazos);
        BarraHerramientas.add(jSeparator2);

        BotonPlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/play.png"))); // NOI18N
        BotonPlay.setToolTipText("Reproducir");
        BotonPlay.setFocusable(false);
        BotonPlay.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonPlay.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonPlayActionPerformed(evt);
            }
        });
        BarraHerramientas.add(BotonPlay);

        BotonPause.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/stop.png"))); // NOI18N
        BotonPause.setToolTipText("Parar reproducción");
        BotonPause.setFocusable(false);
        BotonPause.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonPause.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonPauseActionPerformed(evt);
            }
        });
        BarraHerramientas.add(BotonPause);

        ListaReproduccion.setToolTipText("Sonidos");
        BarraHerramientas.add(ListaReproduccion);

        BotonGrabar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/grabar.png"))); // NOI18N
        BotonGrabar.setToolTipText("Grabar");
        BotonGrabar.setFocusable(false);
        BotonGrabar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonGrabar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonGrabarActionPerformed(evt);
            }
        });
        BarraHerramientas.add(BotonGrabar);
        BarraHerramientas.add(jSeparator6);

        BotonCamara.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/web-cam.png"))); // NOI18N
        BotonCamara.setToolTipText("Cámara web");
        BotonCamara.setFocusable(false);
        BotonCamara.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonCamara.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonCamara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCamaraActionPerformed(evt);
            }
        });
        BarraHerramientas.add(BotonCamara);

        BotonCaptura.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/capturaCam.png"))); // NOI18N
        BotonCaptura.setToolTipText("Captura");
        BotonCaptura.setFocusable(false);
        BotonCaptura.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonCaptura.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonCaptura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCapturaActionPerformed(evt);
            }
        });
        BarraHerramientas.add(BotonCaptura);

        getContentPane().add(BarraHerramientas, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout escritorioLayout = new javax.swing.GroupLayout(escritorio);
        escritorio.setLayout(escritorioLayout);
        escritorioLayout.setHorizontalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1452, Short.MAX_VALUE)
        );
        escritorioLayout.setVerticalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 430, Short.MAX_VALUE)
        );

        getContentPane().add(escritorio, java.awt.BorderLayout.CENTER);

        MenuArchivo.setText("Archivo");

        MenuArchivoNuevo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.ALT_MASK));
        MenuArchivoNuevo.setText("Nuevo");
        MenuArchivoNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuArchivoNuevoActionPerformed(evt);
            }
        });
        MenuArchivo.add(MenuArchivoNuevo);

        MenuArchivoAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK));
        MenuArchivoAbrir.setText("Abrir");
        MenuArchivoAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuArchivoAbrirActionPerformed(evt);
            }
        });
        MenuArchivo.add(MenuArchivoAbrir);

        MenuArchivoGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.ALT_MASK));
        MenuArchivoGuardar.setText("Guardar");
        MenuArchivoGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuArchivoGuardarActionPerformed(evt);
            }
        });
        MenuArchivo.add(MenuArchivoGuardar);

        BarraMenu.add(MenuArchivo);

        MenuVer.setText("Ver");

        MenuVerBarraHerramientas.setText("Barra de herramientas");
        MenuVerBarraHerramientas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuVerBarraHerramientasActionPerformed(evt);
            }
        });
        MenuVer.add(MenuVerBarraHerramientas);

        MenuVerBarraEfectos.setText("Barra de efectos");
        MenuVerBarraEfectos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuVerBarraEfectosActionPerformed(evt);
            }
        });
        MenuVer.add(MenuVerBarraEfectos);

        MenuVerBarraEstado.setText("Barra de estado");
        MenuVerBarraEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuVerBarraEstadoActionPerformed(evt);
            }
        });
        MenuVer.add(MenuVerBarraEstado);

        BarraMenu.add(MenuVer);

        MenuAyuda.setText("Ayuda");

        MenuAyudaAcercaDe.setText("Acerca de");
        MenuAyudaAcercaDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuAyudaAcercaDeActionPerformed(evt);
            }
        });
        MenuAyuda.add(MenuAyudaAcercaDe);

        BarraMenu.add(MenuAyuda);

        setJMenuBar(BarraMenu);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void actualizarHerramientas() {
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            BotonRelleno.setSelected(vi.getLienzo().isRelleno());
            BotonAlisado.setSelected(vi.getLienzo().isAlisado());
            float valorSlider = vi.getLienzo().getTransparencia() * 10;
            SliderTransparencia.setValue((int) valorSlider);
            BotonSeleccion.setSelected(vi.getLienzo().isEdicion());
            SpinnerGrosor.setValue(vi.getLienzo().getGrosor());
            BotonSelectorRelleno.setBackground(vi.getLienzo().getColorRelleno());
            BotonSelectorTrazo.setBackground(vi.getLienzo().getColor());
            float valorTrans = vi.getLienzo().getTransparencia();
            SliderTransparencia.setValue((int) (valorTrans * 10));
            BotonRellenoGrandiente.setSelected(vi.getLienzo().isGrandiente());
            switch (vi.getLienzo().getTipoGradiente()) {
                case "Horizontal":
                    BotonGrandienteHorizontal.setSelected(true);
                    BotonGrandienteVertical.setSelected(false);
                    break;
                case "Vertical":
                    BotonGrandienteVertical.setSelected(true);
                    BotonGrandienteHorizontal.setSelected(false);
                    break;
            }

            switch (vi.getLienzo().getTipoTrazo()) {
                case "Continuo":
                    ComboBoxTrazos.setSelectedIndex(0);
                    break;
                case "Discontinuo":
                    ComboBoxTrazos.setSelectedIndex(1);
                    break;
                case "Punteado":
                    ComboBoxTrazos.setSelectedIndex(2);
                    break;
            }

            switch (vi.getLienzo().getForma()) {
                case 0:
                    BotonLinea.setSelected(false);
                    BotonRectangulo.setSelected(false);
                    BotonOvalo.setSelected(false);
                    BotonCurva.setSelected(false);
                    BotonTrazoLibre.setSelected(false);
                    BotonArea.setSelected(false);
                case 1:
                    BotonLinea.setSelected(true);
                    BotonRectangulo.setSelected(false);
                    BotonOvalo.setSelected(false);
                    BotonCurva.setSelected(false);
                    BotonTrazoLibre.setSelected(false);
                    BotonArea.setSelected(false);
                    break;
                case 2:
                    BotonRectangulo.setSelected(true);
                    BotonLinea.setSelected(false);
                    BotonOvalo.setSelected(false);
                    BotonCurva.setSelected(false);
                    BotonTrazoLibre.setSelected(false);
                    BotonArea.setSelected(false);
                    break;
                case 3:
                    BotonOvalo.setSelected(true);
                    BotonRectangulo.setSelected(false);
                    BotonLinea.setSelected(false);
                    BotonCurva.setSelected(false);
                    BotonTrazoLibre.setSelected(false);
                    BotonArea.setSelected(false);
                    break;
                case 4:
                    BotonCurva.setSelected(true);
                    BotonRectangulo.setSelected(false);
                    BotonOvalo.setSelected(false);
                    BotonLinea.setSelected(false);
                    BotonTrazoLibre.setSelected(false);
                    BotonArea.setSelected(false);
                    break;
                case 5:
                    BotonTrazoLibre.setSelected(true);
                    BotonRectangulo.setSelected(false);
                    BotonOvalo.setSelected(false);
                    BotonCurva.setSelected(false);
                    BotonLinea.setSelected(false);
                    BotonArea.setSelected(false);
                    break;
                case 6:
                    BotonArea.setSelected(true);
                    BotonRectangulo.setSelected(false);
                    BotonOvalo.setSelected(false);
                    BotonCurva.setSelected(false);
                    BotonTrazoLibre.setSelected(false);
                    BotonLinea.setSelected(false);
                    break;
            }
        }

    }

    private void HerramientasBotonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HerramientasBotonNuevoActionPerformed
        String tamaño = "nulo";
        try {
            tamaño = JOptionPane.showInputDialog(this, "Introduzca el tamaño del nuevo lienzo");
            if (!"nulo".equals(tamaño)) {
                int tamañoVentana;
                tamañoVentana = Integer.parseInt(tamaño);
                VentanaInternaImagen vi = new VentanaInternaImagen(this);
                escritorio.add(vi);
                vi.setVisible(true);
                vi.setSize(tamañoVentana, tamañoVentana);
                vi.setLocation(a, b);
                vi.setResizable(false);
                vi.setMaximizable(false);
                vi.setTitle("Nueva");
                a += 20;
                b += 20;

                BufferedImage img;
                img = new BufferedImage(tamañoVentana, tamañoVentana, BufferedImage.TYPE_INT_RGB);
                img.createGraphics().setPaint(Color.white);
                img.createGraphics().fill(new Rectangle2D.Float(0.0f, 0.0f, img.getWidth(), img.getHeight()));
                vi.getLienzo().setImage(img);
                BotonGuardar.setEnabled(true);
            }

        } catch (NumberFormatException ex) {
            System.err.println("Error al abrir nuevo lienzo");
            JOptionPane.showMessageDialog(null, "El tamaño debe ser un número");
        }


    }//GEN-LAST:event_HerramientasBotonNuevoActionPerformed

    private void BotonLineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonLineaActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setForma(1);
        }

        //BotonPunto.setSelected(false);
        BotonRectangulo.setSelected(false);
        BotonOvalo.setSelected(false);
        BotonCurva.setSelected(false);
        BotonArea.setSelected(false);
        BotonTrazoLibre.setSelected(false);

        EtiquetaForma.setText("Linea ");
    }//GEN-LAST:event_BotonLineaActionPerformed

    private void BotonRectanguloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRectanguloActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setForma(2);
        }

        BotonLinea.setSelected(false);
        BotonOvalo.setSelected(false);
        BotonCurva.setSelected(false);
        BotonArea.setSelected(false);
        BotonTrazoLibre.setSelected(false);

        EtiquetaForma.setText("Rectángulo ");
    }//GEN-LAST:event_BotonRectanguloActionPerformed

    private void BotonOvaloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonOvaloActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setForma(3);
        }

        BotonLinea.setSelected(false);
        BotonRectangulo.setSelected(false);
        BotonCurva.setSelected(false);
        BotonArea.setSelected(false);
        BotonTrazoLibre.setSelected(false);

        EtiquetaForma.setText("Óvalo ");
    }//GEN-LAST:event_BotonOvaloActionPerformed

    private void BotonRellenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRellenoActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            if (!vi.getLienzo().isRelleno()) {

                if (vi.getLienzo().isGrandiente()) {
                    BotonRellenoGrandiente.setSelected(true);
                }
                if ("Horizontal".equals(vi.getLienzo().getTipoGradiente())) {
                    BotonGrandienteHorizontal.setSelected(true);
                } else if ("Vertical".equals(vi.getLienzo().getTipoGradiente())) {
                    BotonGrandienteVertical.setSelected(true);
                }
            }

            vi.getLienzo().setActualShapeRelleno();
            if (vi.getLienzo().isEdicion()) {
                vi.getLienzo().modificarFigura();
            }
        }

        this.repaint();
    }//GEN-LAST:event_BotonRellenoActionPerformed

    private void BotonAlisadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAlisadoActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setActualShapeAlisado();
            if (vi.getLienzo().isEdicion()) {
                vi.getLienzo().modificarFigura();
            }
        }

        this.repaint();
    }//GEN-LAST:event_BotonAlisadoActionPerformed

    private void SpinnerGrosorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SpinnerGrosorStateChanged
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            int grosor = (int) SpinnerGrosor.getValue();
            vi.getLienzo().setActualShapeTrazo(grosor);
            if (vi.getLienzo().isEdicion()) {
                vi.getLienzo().modificarFigura();
            }
        }

        this.repaint();
    }//GEN-LAST:event_SpinnerGrosorStateChanged

    private void BotonAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAreaActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setForma(6);
        }

        BotonLinea.setSelected(false);
        BotonRectangulo.setSelected(false);
        BotonOvalo.setSelected(false);
        BotonCurva.setSelected(false);
        BotonTrazoLibre.setSelected(false);

        EtiquetaForma.setText("Área ");
    }//GEN-LAST:event_BotonAreaActionPerformed

    private void BotonCurvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCurvaActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setForma(4);
        }

        BotonLinea.setSelected(false);
        BotonRectangulo.setSelected(false);
        BotonOvalo.setSelected(false);
        BotonArea.setSelected(false);
        BotonTrazoLibre.setSelected(false);

        EtiquetaForma.setText("Curva ");
    }//GEN-LAST:event_BotonCurvaActionPerformed

    private void BotonSeleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSeleccionActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            if (vi.getLienzo().isEdicion()) {
                vi.getLienzo().setEdicion(false);
            } else {
                vi.getLienzo().setEdicion(true);
            }
        }

        this.repaint();
    }//GEN-LAST:event_BotonSeleccionActionPerformed

    private void BotonTrazoLibreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonTrazoLibreActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setForma(5);
        }
        BotonLinea.setSelected(false);
        BotonRectangulo.setSelected(false);
        BotonOvalo.setSelected(false);
        BotonCurva.setSelected(false);
        BotonArea.setSelected(false);
        EtiquetaForma.setText("Trazo libre ");
    }//GEN-LAST:event_BotonTrazoLibreActionPerformed

    private void BotonAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAbrirActionPerformed
        JFileChooser dlg = new JFileChooser();
        FileFilter filtro = new FileNameExtensionFilter("Filtros", "png", "jpg", "jpeg", "mp3", "wav", "avi", "mp4");
        dlg.setFileFilter(filtro);
        int resp = dlg.showOpenDialog(this);
        if (resp == JFileChooser.APPROVE_OPTION) {
            try {

                String extension = "";
                int i = dlg.getSelectedFile().getName().lastIndexOf('.');
                if (i > 0) {
                    extension = dlg.getSelectedFile().getName().substring(i + 1);
                }
                if ("png".equals(extension) || "jpg".equals(extension) || "jpeg".equals(extension)) {
                    BotonGuardar.setEnabled(true);
                    File f = dlg.getSelectedFile();
                    BufferedImage img = ImageIO.read(f);
                    VentanaInternaImagen vi = new VentanaInternaImagen(this);
                    vi.getLienzo().setImage(img);
                    this.escritorio.add(vi);
                    vi.setTitle(f.getName().concat(" Abierta"));
                    vi.setVisible(true);
                    vi.setSize(img.getWidth(), img.getHeight());
                    vi.setLocation(a, b);
                    a += 20;
                    b += 20;

                } else if ("wav".equals(extension) || "mp3".equals(extension)) {
                    BotonGuardar.setEnabled(false);

                    File f = new File(dlg.getSelectedFile().getAbsolutePath()) {
                        @Override
                        public String toString() {
                            return this.getName();
                        }
                    };

                    this.ListaReproduccion.addItem(f);

                } else if ("avi".equals(extension) || "mp4".equals(extension)) {
                    BotonGuardar.setEnabled(false);
                    
                    VentanaInternaVideo viv = new VentanaInternaVideo(dlg.getSelectedFile());
                    this.escritorio.add(viv);
                    viv.setTitle(dlg.getSelectedFile().getName());
                    viv.setVisible(true);
                    viv.setLocation(50, 50);
                    viv.setClosable(true);

                }

            } catch (IOException ex) {
                System.err.println("Error al leer la imagen");
                JOptionPane.showMessageDialog(null, "Error al abrir la imagen");
            }
        }
    }//GEN-LAST:event_BotonAbrirActionPerformed

    private void SliderBrilloStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderBrilloStateChanged
        VentanaInternaImagen vi = (VentanaInternaImagen) (escritorio.getSelectedFrame());
        if (vi != null) {
            if (imgOrigen != null) {
                RescaleOp rop = new RescaleOp(1.0F, (int) SliderBrillo.getValue(), null);
                BufferedImage imgDestino = rop.filter(imgOrigen, null);
                vi.getLienzo().setImage(imgDestino);
                vi.getLienzo().repaint();
                escritorio.repaint();
            }
        }
    }//GEN-LAST:event_SliderBrilloStateChanged

    private void SliderBrilloFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SliderBrilloFocusGained
        VentanaInternaImagen vi = (VentanaInternaImagen) (escritorio.getSelectedFrame());
        if (vi != null) {
            ColorModel cm = vi.getLienzo().getImage().getColorModel();
            WritableRaster raster = vi.getLienzo().getImage().copyData(null);
            boolean alfaPre = vi.getLienzo().getImage().isAlphaPremultiplied();
            imgOrigen = new BufferedImage(cm, raster, alfaPre, null);
        }
    }//GEN-LAST:event_SliderBrilloFocusGained

    private void SliderBrilloFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SliderBrilloFocusLost
        imgOrigen = null;
        SliderBrillo.setValue(0);
        this.repaint();
    }//GEN-LAST:event_SliderBrilloFocusLost

    private void ComboBoxFiltrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxFiltrosActionPerformed
        Kernel k = KernelProducer.createKernel(KernelProducer.TYPE_MEDIA_3x3);
        Object selectedItem = ComboBoxFiltros.getSelectedItem();
        String selectedItemStr = selectedItem.toString();

        switch (selectedItemStr) {
            case "Media":
                k = KernelProducer.createKernel(KernelProducer.TYPE_MEDIA_3x3);
                break;

            case "Binomial":
                k = KernelProducer.createKernel(KernelProducer.TYPE_BINOMIAL_3x3);
                break;

            case "Enfoque":
                k = KernelProducer.createKernel(KernelProducer.TYPE_ENFOQUE_3x3);
                break;

            case "Relieve":
                k = KernelProducer.createKernel(KernelProducer.TYPE_RELIEVE_3x3);
                break;

            case "Laplaciano":
                k = KernelProducer.createKernel(KernelProducer.TYPE_LAPLACIANA_3x3);
                break;
        }

        VentanaInternaImagen vi = (VentanaInternaImagen) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgSource = vi.getLienzo().getImage();
            if (imgSource != null) {
                try {
                    ConvolveOp cop = new ConvolveOp(k, ConvolveOp.EDGE_NO_OP, null);
                    BufferedImage imgdest = cop.filter(imgSource, null);
                    vi.getLienzo().setImage(imgdest);
                    vi.getLienzo().repaint();
                } catch (IllegalArgumentException e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }

        escritorio.repaint();
    }//GEN-LAST:event_ComboBoxFiltrosActionPerformed

    private void BottonContraste1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonContraste1ActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) (escritorio.getSelectedFrame());
        if (vi != null) {
            imgOrigen = vi.getLienzo().getImage();
            if (imgOrigen != null) {
                try {
                    int type = LookupTableProducer.TYPE_SFUNCION;
                    LookupTable lt = LookupTableProducer.createLookupTable(type);
                    LookupOp lop = new LookupOp(lt, null);
                    // Imagen origen y destino iguales
                    lop.filter(imgOrigen, imgOrigen);
                    vi.repaint();
                } catch (Exception e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
        escritorio.repaint();
    }//GEN-LAST:event_BottonContraste1ActionPerformed

    private void BotonContraste2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonContraste2ActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) (escritorio.getSelectedFrame());
        if (vi != null) {
            imgOrigen = vi.getLienzo().getImage();
            if (imgOrigen != null) {
                try {
                    int type = LookupTableProducer.TYPE_LOGARITHM;
                    LookupTable lt = LookupTableProducer.createLookupTable(type);
                    LookupOp lop = new LookupOp(lt, null);
                    // Imagen origen y destino iguales
                    lop.filter(imgOrigen, imgOrigen);
                    vi.repaint();
                } catch (Exception e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
        escritorio.repaint();
    }//GEN-LAST:event_BotonContraste2ActionPerformed

    private void BotonContraste3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonContraste3ActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) (escritorio.getSelectedFrame());
        if (vi != null) {
            imgOrigen = vi.getLienzo().getImage();
            if (imgOrigen != null) {
                try {
                    int type = LookupTableProducer.TYPE_POWER;
                    LookupTable lt = LookupTableProducer.createLookupTable(type);
                    LookupOp lop = new LookupOp(lt, null);
                    // Imagen origen y destino iguales
                    lop.filter(imgOrigen, imgOrigen);
                    vi.repaint();
                } catch (Exception e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
        escritorio.repaint();
    }//GEN-LAST:event_BotonContraste3ActionPerformed
    
    imageUtility utilidades = new imageUtility();
    private void BotonSeno2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSeno2ActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) (escritorio.getSelectedFrame());
        if (vi != null) {
            imgOrigen = vi.getLienzo().getImage();
            if (imgOrigen != null) {
                try {
                    LookupTable lt = utilidades.seno(180.0 / 255.0);
                    LookupOp lop = new LookupOp(lt, null);
                    lop.filter(imgOrigen, imgOrigen);
                    vi.repaint();

                } catch (Exception e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_BotonSeno2ActionPerformed

    private void BotonSepiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSepiaActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) (escritorio.getSelectedFrame());
        if (vi != null) {
            imgOrigen = vi.getLienzo().getImage();
            if (imgOrigen != null) {
                try {
                    SepiaOp sop = new SepiaOp();
                    sop.filter(imgOrigen, imgOrigen);
                    vi.repaint();

                } catch (Exception e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_BotonSepiaActionPerformed

    private void BotonSimplyRGBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSimplyRGBActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) (escritorio.getSelectedFrame());
        if (vi != null) {
            imgOrigen = vi.getLienzo().getImage();
            if (imgOrigen != null) {
                try {
                    SimplyRGBOp lelop = new SimplyRGBOp();
                    lelop.filter(imgOrigen, imgOrigen);
                    vi.repaint();

                } catch (Exception e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_BotonSimplyRGBActionPerformed

    private void BotonMusgoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonMusgoActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) (escritorio.getSelectedFrame());
        if (vi != null) {
            imgOrigen = vi.getLienzo().getImage();
            if (imgOrigen != null) {
                try {
                    MusgoOp mop = new MusgoOp();
                    mop.filter(imgOrigen, imgOrigen);
                    vi.repaint();

                } catch (Exception e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_BotonMusgoActionPerformed

    private void BotonSpookyOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSpookyOpActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) (escritorio.getSelectedFrame());
        if (vi != null) {
            imgOrigen = vi.getLienzo().getImage();
            if (imgOrigen != null) {
                try {
                    SpookyOp nop = new SpookyOp();
                    nop.filter(imgOrigen, imgOrigen);
                    vi.repaint();

                } catch (Exception e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_BotonSpookyOpActionPerformed

    private void SliderRotacionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderRotacionStateChanged
        VentanaInternaImagen vi = (VentanaInternaImagen) (escritorio.getSelectedFrame());
        if (vi != null) {
            if (imgOrigen != null) {
                try {
                    double r = Math.toRadians(SliderRotacion.getValue());
                    Point p = new Point(imgOrigen.getWidth() / 2, imgOrigen.getHeight() / 2);
                    AffineTransform at = AffineTransform.getRotateInstance(r, p.x, p.y);
                    AffineTransformOp atop;
                    atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                    BufferedImage imgDestino = atop.filter(imgOrigen, null);
                    vi.getLienzo().setImage(imgDestino);
                    vi.repaint();
                } catch (Exception e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }       // TODO add your handling code here:
    }//GEN-LAST:event_SliderRotacionStateChanged

    private void SliderRotacionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SliderRotacionFocusGained
        VentanaInternaImagen vi = (VentanaInternaImagen) (escritorio.getSelectedFrame());
        if (vi != null) {
            imgOrigen = vi.getLienzo().getImage();
        }
    }//GEN-LAST:event_SliderRotacionFocusGained

    private void SliderRotacionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SliderRotacionFocusLost
        imgOrigen = null;
        SliderRotacion.setValue(0);        // TODO add your handling code here:
    }//GEN-LAST:event_SliderRotacionFocusLost

    private void BotonRotacion90ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRotacion90ActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) (escritorio.getSelectedFrame());
        if (vi != null) {
            imgOrigen = vi.getLienzo().getImage();
            if (imgOrigen != null) {
                try {
                    double r = Math.toRadians(90);
                    Point p = new Point(imgOrigen.getWidth() / 2, imgOrigen.getHeight() / 2);
                    AffineTransform at = AffineTransform.getRotateInstance(r, p.x, p.y);
                    AffineTransformOp atop;
                    atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);

                    //BufferedImage imgDestino = new BufferedImage(imgOrigen.getHeight(),imgOrigen.getWidth(),BufferedImage.TYPE_INT_ARGB);
                    //atop.filter(imgOrigen, imgDestino);
                    BufferedImage imgDestino = atop.filter(imgOrigen, null);
                    vi.getLienzo().setImage(imgDestino);

                    vi.repaint();
                } catch (Exception e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_BotonRotacion90ActionPerformed

    private void BotonRotacion180ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRotacion180ActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) (escritorio.getSelectedFrame());
        if (vi != null) {
            imgOrigen = vi.getLienzo().getImage();
            if (imgOrigen != null) {
                try {
                    double r = Math.toRadians(180);
                    Point p = new Point(imgOrigen.getWidth() / 2, imgOrigen.getHeight() / 2);
                    AffineTransform at = AffineTransform.getRotateInstance(r, p.x, p.y);
                    AffineTransformOp atop;
                    atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                    BufferedImage imgDestino = atop.filter(imgOrigen, null);
                    vi.getLienzo().setImage(imgDestino);
                    vi.repaint();
                } catch (Exception e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_BotonRotacion180ActionPerformed

    private void BotonRotacion270ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRotacion270ActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) (escritorio.getSelectedFrame());
        if (vi != null) {
            imgOrigen = vi.getLienzo().getImage();
            if (imgOrigen != null) {
                try {
                    double r = Math.toRadians(270);
                    Point p = new Point(imgOrigen.getWidth() / 2, imgOrigen.getHeight() / 2);
                    AffineTransform at = AffineTransform.getRotateInstance(r, p.x, p.y);
                    AffineTransformOp atop;
                    atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                    BufferedImage imgDestino = atop.filter(imgOrigen, null);
                    vi.getLienzo().setImage(imgDestino);
                    vi.repaint();
                } catch (Exception e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_BotonRotacion270ActionPerformed

    private void BotonMasEscalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonMasEscalaActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) (escritorio.getSelectedFrame());
        if (vi != null) {
            imgOrigen = vi.getLienzo().getImage();
            if (imgOrigen != null) {
                try {
                    double r = Math.toRadians(270);
                    Point p = new Point(imgOrigen.getWidth() / 2, imgOrigen.getHeight() / 2);
                    AffineTransform at = AffineTransform.getScaleInstance(1.25, 1.25);
                    AffineTransformOp atop;
                    atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                    BufferedImage imgDestino = atop.filter(imgOrigen, null);
                    vi.getLienzo().setImage(imgDestino);
                    vi.repaint();
                } catch (Exception e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_BotonMasEscalaActionPerformed

    private void BotonMenosEscalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonMenosEscalaActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) (escritorio.getSelectedFrame());
        if (vi != null) {
            imgOrigen = vi.getLienzo().getImage();
            if (imgOrigen != null) {
                try {
                    double r = Math.toRadians(270);
                    Point p = new Point(imgOrigen.getWidth() / 2, imgOrigen.getHeight() / 2);
                    AffineTransform at = AffineTransform.getScaleInstance(0.75, 0.75);
                    AffineTransformOp atop;
                    atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                    BufferedImage imgDestino = atop.filter(imgOrigen, null);
                    vi.getLienzo().setImage(imgDestino);
                    vi.repaint();
                } catch (Exception e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_BotonMenosEscalaActionPerformed

    private void ComboBoxEspacioColor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxEspacioColor1ActionPerformed
        Object selectedItem = ComboBoxEspacioColor1.getSelectedItem();
        String selectedItemStr = selectedItem.toString();
        ColorSpace cs = ColorSpace.getInstance(ColorSpace.CS_sRGB);
        switch (selectedItemStr) {
            case "sRGB":
                cs = ColorSpace.getInstance(ColorSpace.CS_sRGB);

                break;

            case "YCC":
                cs = ColorSpace.getInstance(ColorSpace.CS_PYCC);

                break;

            case "Grey":
                cs = ColorSpace.getInstance(ColorSpace.CS_GRAY);

                break;
        }

        VentanaInternaImagen vi = (VentanaInternaImagen) (escritorio.getSelectedFrame());
        if (vi != null) {
            imgOrigen = vi.getLienzo().getImage();
            if (imgOrigen != null) {
                try {
                    BufferedImage imgNuevoModelo;

                    //if (imgOrigen.getColorModel().getColorSpace().isCS_sRGB()) {
                    ColorConvertOp cop = new ColorConvertOp(cs, null);
                    imgNuevoModelo = cop.filter(imgOrigen, null);
                    //}

                    VentanaInternaImagen vib = new VentanaInternaImagen(this);
                    vib.getLienzo().setImage(imgNuevoModelo);
                    this.escritorio.add(vib);
                    vib.setTitle(vi.getTitle().concat(" ").concat(selectedItemStr));
                    vib.setVisible(true);
                    vib.setSize(imgNuevoModelo.getWidth(), imgNuevoModelo.getHeight());
                    vib.setLocation(20, 20);
                    escritorio.repaint();

                } catch (Exception e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }

    }//GEN-LAST:event_ComboBoxEspacioColor1ActionPerformed

    private void BotonBandas1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonBandas1ActionPerformed
        int a = 20, b = 20;
        VentanaInternaImagen vi = (VentanaInternaImagen) (escritorio.getSelectedFrame());
        if (vi != null) {
            imgOrigen = vi.getLienzo().getImage();
            if (imgOrigen != null) {
                try {
                    BufferedImage banda;
                    for (int i = 0; i < imgOrigen.getColorModel().getNumColorComponents(); i++) {
                        String s = Integer.toString(i);
                        banda = utilidades.getBand(i, imgOrigen);

                        VentanaInternaImagen vib = new VentanaInternaImagen(this);
                        vib.getLienzo().setImage(banda);
                        this.escritorio.add(vib);
                        vib.setTitle("Banda ".concat(s));
                        vib.setVisible(true);
                        vib.setSize(vi.getLienzo().getImage().getWidth(), vi.getLienzo().getHeight());
                        vib.setLocation(a, b);
                        a += 20;
                        b += 20;

                        escritorio.repaint();
                    }

                } catch (Exception e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_BotonBandas1ActionPerformed

    SMPlayer player = null;
    SMRecorder recorder = null;

    private void BotonPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonPlayActionPerformed
        File f = (File) this.ListaReproduccion.getSelectedItem();
        if (f != null) {
            player = new SMClipPlayer(f);
            if (player != null) {
                player.play();
            }
        }
    }//GEN-LAST:event_BotonPlayActionPerformed

    private void BotonPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonPauseActionPerformed
        if (player != null) {
            player.stop();
        } else {
            recorder.stop();
        }
    }//GEN-LAST:event_BotonPauseActionPerformed

    private void BotonGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonGrabarActionPerformed
        JFileChooser dlg = new JFileChooser();
        int resp = dlg.showSaveDialog(this);
        if (resp == JFileChooser.APPROVE_OPTION) {
            try {
                File f = new File(dlg.getSelectedFile().getAbsolutePath()) {
                    @Override
                    public String toString() {
                        return this.getName();
                    }
                };
                recorder = new SMSoundRecorder(f);
                if (recorder != null) {
                    recorder.record();
                    this.ListaReproduccion.addItem(f);
                }

            } catch (Exception ex) {
                System.err.println("Error al guardar el audio");
            }

            recorder.record();
        }
    }//GEN-LAST:event_BotonGrabarActionPerformed

    private void BotonCamaraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCamaraActionPerformed
        VentanaInternaCamara vi = VentanaInternaCamara.getInstance();

        if (vi != null) {
            this.escritorio.add(vi);
            vi.setTitle("Camara Web");
            vi.setVisible(true);
            Dimension resoluciones[] = vi.getCamara().getViewSizes();
            Dimension maxRes = resoluciones[resoluciones.length - 1];
            vi.setSize(maxRes);
            vi.setClosable(true);
            vi.setResizable(true);
        }

    }//GEN-LAST:event_BotonCamaraActionPerformed

    private void BotonCapturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCapturaActionPerformed
        VentanaInternaCamara vic = VentanaInternaCamara.getInstance();
        Webcam camara = vic.getCamara();
        BufferedImage img = camara.getImage();

        VentanaInternaImagen vi = new VentanaInternaImagen(this);
        if (vi != null) {
            if (img != null) {
                try {

                    vi.getLienzo().setImage(img);
                    escritorio.add(vi);
                    vi.setVisible(true);
                    vi.setSize(img.getWidth(), img.getHeight());
                    vi.setTitle("Captura");
                    vi.setLocation(a, b);
                    a += 20;
                    b += 20;
                    vi.repaint();

                } catch (Exception e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_BotonCapturaActionPerformed

    private void BotonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonGuardarActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            JFileChooser dlg = new JFileChooser();
            int resp = dlg.showSaveDialog(this);
            if (resp == JFileChooser.APPROVE_OPTION) {
                try {
                    BufferedImage img = vi.getLienzo().getImage(true);
                    if (img != null) {
                        File f = dlg.getSelectedFile();
                        ImageIO.write(img, "png", f);
                        vi.setTitle(f.getName().concat(" Guardada"));
                    }
                } catch (IOException ex) {
                    System.err.println("Error al guardar la imagen");
                }
            }
        }
    }//GEN-LAST:event_BotonGuardarActionPerformed

    private void BotonNegroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonNegroActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setActualShapeColorTrazo(Color.black);
            vi.getLienzo().setActualShapeColorRelleno(Color.black);
            if (vi.getLienzo().isEdicion()) {
                vi.getLienzo().modificarFigura();
            }
        }

        this.repaint();
    }//GEN-LAST:event_BotonNegroActionPerformed

    private void BotonRojoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRojoActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setActualShapeColorTrazo(Color.red);
            vi.getLienzo().setActualShapeColorRelleno(Color.red);
            if (vi.getLienzo().isEdicion()) {
                vi.getLienzo().modificarFigura();
            }
        }

        this.repaint();
    }//GEN-LAST:event_BotonRojoActionPerformed

    private void BotonAmarilloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAmarilloActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setActualShapeColorTrazo(Color.yellow);
            vi.getLienzo().setActualShapeColorRelleno(Color.yellow);
            if (vi.getLienzo().isEdicion()) {
                vi.getLienzo().modificarFigura();
            }
        }

        this.repaint();
    }//GEN-LAST:event_BotonAmarilloActionPerformed

    private void BotonAzulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAzulActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setActualShapeColorTrazo(Color.blue);
            vi.getLienzo().setActualShapeColorRelleno(Color.blue);
            if (vi.getLienzo().isEdicion()) {
                vi.getLienzo().modificarFigura();
            }
        }

        this.repaint();
    }//GEN-LAST:event_BotonAzulActionPerformed

    private void BotonVerdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonVerdeActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setActualShapeColorTrazo(Color.green);
            vi.getLienzo().setActualShapeColorRelleno(Color.green);
            if (vi.getLienzo().isEdicion()) {
                vi.getLienzo().modificarFigura();
            }
        }

        this.repaint();
    }//GEN-LAST:event_BotonVerdeActionPerformed

    private void BotonRojo6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRojo6ActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setActualShapeColorTrazo(Color.white);
            vi.getLienzo().setActualShapeColorRelleno(Color.white);
            if (vi.getLienzo().isEdicion()) {
                vi.getLienzo().modificarFigura();
            }
        }

        this.repaint();
    }//GEN-LAST:event_BotonRojo6ActionPerformed

    private void MenuAyudaAcercaDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuAyudaAcercaDeActionPerformed
        JOptionPane.showMessageDialog(null, "Nombre del programa: Aplicación multimedia SMM \nAutor: Carlos Ariza García \nVersión: 4.5");
    }//GEN-LAST:event_MenuAyudaAcercaDeActionPerformed

    boolean barraHerra = true;
    boolean barraEfectos = true;
    boolean barraEstado = true;

    private void MenuVerBarraHerramientasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuVerBarraHerramientasActionPerformed
        if (barraHerra) {
            barraHerra = false;
            BarraHerramientas.setVisible(false);
        } else {
            barraHerra = true;
            BarraHerramientas.setVisible(true);
        }
    }//GEN-LAST:event_MenuVerBarraHerramientasActionPerformed

    private void MenuVerBarraEfectosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuVerBarraEfectosActionPerformed
        if (barraEfectos) {
            barraEfectos = false;
            BarraEfectos.setVisible(false);
        } else {
            barraEfectos = true;
            BarraEfectos.setVisible(true);
        }
    }//GEN-LAST:event_MenuVerBarraEfectosActionPerformed

    private void MenuVerBarraEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuVerBarraEstadoActionPerformed
        if (barraEstado) {
            barraEstado = false;
            PanelEstado.setVisible(false);
        } else {
            barraEstado = true;
            PanelEstado.setVisible(true);
        }
    }//GEN-LAST:event_MenuVerBarraEstadoActionPerformed

    private void MenuArchivoNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuArchivoNuevoActionPerformed
        String tamaño = "nulo";
        try {
            tamaño = JOptionPane.showInputDialog(this, "Introduzca el tamaño del nuevo lienzo");
            if (!"nulo".equals(tamaño)) {
                int tamañoVentana;
                tamañoVentana = Integer.parseInt(tamaño);
                VentanaInternaImagen vi = new VentanaInternaImagen(this);
                escritorio.add(vi);
                vi.setVisible(true);
                vi.setSize(tamañoVentana, tamañoVentana);
                vi.setLocation(a, b);
                vi.setResizable(false);
                vi.setMaximizable(false);
                vi.setTitle("Nueva");
                a += 20;
                b += 20;

                BufferedImage img;
                img = new BufferedImage(tamañoVentana, tamañoVentana, BufferedImage.TYPE_INT_RGB);
                img.createGraphics().setPaint(Color.white);
                img.createGraphics().fill(new Rectangle2D.Float(0.0f, 0.0f, img.getWidth(), img.getHeight()));
                vi.getLienzo().setImage(img);
            }

        } catch (NumberFormatException ex) {
            System.err.println("Error al abrir nuevo lienzo");
            JOptionPane.showMessageDialog(null, "El tamaño debe ser un número");
        }


    }//GEN-LAST:event_MenuArchivoNuevoActionPerformed

    private void MenuArchivoAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuArchivoAbrirActionPerformed
        JFileChooser dlg = new JFileChooser();
        FileFilter filtro = new FileNameExtensionFilter("Filtros", "png", "jpg");
        dlg.setFileFilter(filtro);
        int resp = dlg.showOpenDialog(this);
        if (resp == JFileChooser.APPROVE_OPTION) {
            try {
                File f = dlg.getSelectedFile();
                BufferedImage img = ImageIO.read(f);
                VentanaInternaImagen vi = new VentanaInternaImagen(this);
                vi.getLienzo().setImage(img);
                this.escritorio.add(vi);
                vi.setTitle(f.getName());
                vi.setVisible(true);
                vi.setSize(img.getWidth(), img.getHeight());
            } catch (IOException ex) {
                System.err.println("Error al leer la imagen");
            }
        }
    }//GEN-LAST:event_MenuArchivoAbrirActionPerformed

    private void MenuArchivoGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuArchivoGuardarActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            JFileChooser dlg = new JFileChooser();
            int resp = dlg.showSaveDialog(this);
            if (resp == JFileChooser.APPROVE_OPTION) {
                try {
                    BufferedImage img = vi.getLienzo().getImage(true);
                    if (img != null) {
                        File f = dlg.getSelectedFile();
                        ImageIO.write(img, "png", f);
                        vi.setTitle(f.getName());
                    }
                } catch (IOException ex) {
                    System.err.println("Error al guardar la imagen");
                }
            }
        }
    }//GEN-LAST:event_MenuArchivoGuardarActionPerformed

    private void BotonSelectorRellenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSelectorRellenoActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            Color colorSelector;
            colorSelector = JColorChooser.showDialog(rootPane, "Seleccione el color deseado", Color.yellow);
            vi.getLienzo().setActualShapeColorRelleno(colorSelector);
            this.BotonSelectorRelleno.setBackground(colorSelector);
            if (vi.getLienzo().isEdicion()) {
                vi.getLienzo().modificarFigura();
            }
        }
        this.repaint();
    }//GEN-LAST:event_BotonSelectorRellenoActionPerformed

    private void BotonSelectorTrazoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSelectorTrazoActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            Color colorSelector;
            colorSelector = JColorChooser.showDialog(rootPane, "Seleccione el color deseado", Color.yellow);
            vi.getLienzo().setActualShapeColorTrazo(colorSelector);
            this.BotonSelectorTrazo.setBackground(colorSelector);
            if (vi.getLienzo().isEdicion()) {
                vi.getLienzo().modificarFigura();
            }
        }
        this.repaint();
    }//GEN-LAST:event_BotonSelectorTrazoActionPerformed

    private void BotonDuplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonDuplicarActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            BufferedImage duplicado = vi.getLienzo().getImage();
            VentanaInternaImagen vidup = new VentanaInternaImagen(this);
            vidup.getLienzo().setImage(duplicado);

            this.escritorio.add(vidup);
            vidup.setTitle(vi.getTitle().concat(" Duplicado"));
            vidup.setVisible(true);
            vidup.setSize(duplicado.getWidth(), duplicado.getHeight());
            vidup.setLocation(a, b);
            a += 20;
            b += 20;
        }
    }//GEN-LAST:event_BotonDuplicarActionPerformed

    private void BotonRellenoGrandienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRellenoGrandienteActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setActualShapeGrandiente();
            if (vi.getLienzo().isEdicion()) {
                vi.getLienzo().modificarFigura();
            }
        }
        this.repaint();
    }//GEN-LAST:event_BotonRellenoGrandienteActionPerformed

    private void BotonGrandienteHorizontalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonGrandienteHorizontalActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setActualShapeTipoGrandiente("Horizontal");
            if (vi.getLienzo().isEdicion()) {
                vi.getLienzo().modificarFigura();
            }
        }
        BotonGrandienteVertical.setSelected(false);
        this.repaint();
    }//GEN-LAST:event_BotonGrandienteHorizontalActionPerformed

    private void BotonGrandienteVerticalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonGrandienteVerticalActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setActualShapeTipoGrandiente("Vertical");
            if (vi.getLienzo().isEdicion()) {
                vi.getLienzo().modificarFigura();
            }
        }
        BotonGrandienteHorizontal.setSelected(false);
        this.repaint();
    }//GEN-LAST:event_BotonGrandienteVerticalActionPerformed

    private void SliderTransparenciaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderTransparenciaStateChanged
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            float trans = SliderTransparencia.getValue();
            vi.getLienzo().setActualShapeTransparencia(trans / 10);
            vi.getLienzo().setTransparencia(trans / 10);
            if (vi.getLienzo().isEdicion()) {
                vi.getLienzo().modificarFigura();
            }
        }

        this.repaint();
    }//GEN-LAST:event_SliderTransparenciaStateChanged

    private void ComboBoxTrazosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxTrazosActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            Object selectedItem = ComboBoxTrazos.getSelectedItem();
            String selectedItemStr = selectedItem.toString();
            switch (selectedItemStr) {
                case "Continuo":
                    vi.getLienzo().setActualShapeTipoTrazo("Continuo");
                    break;
                case "Discontinuo":
                    vi.getLienzo().setActualShapeTipoTrazo("Discontinuo");
                    break;
                case "Punteado":
                    vi.getLienzo().setActualShapeTipoTrazo("Punteado");
                    break;
            }
            if (vi.getLienzo().isEdicion()) {
                vi.getLienzo().modificarFigura();
            }
        }
        this.repaint();
    }//GEN-LAST:event_ComboBoxTrazosActionPerformed

    private void BotonTraerAdelanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonTraerAdelanteActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().cambiarOrdenacion(1);
        }
        this.repaint();
    }//GEN-LAST:event_BotonTraerAdelanteActionPerformed

    private void BotonEnviarAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonEnviarAtrasActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().cambiarOrdenacion(2);
        }
        this.repaint();
    }//GEN-LAST:event_BotonEnviarAtrasActionPerformed

    private void BotonTraerAlFrenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonTraerAlFrenteActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().cambiarOrdenacion(3);
        }
        this.repaint();
    }//GEN-LAST:event_BotonTraerAlFrenteActionPerformed

    private void BotonEnviarAlFondoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonEnviarAlFondoActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().cambiarOrdenacion(4);
        }
        this.repaint();
    }//GEN-LAST:event_BotonEnviarAlFondoActionPerformed

    private void BotonNegativoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonNegativoActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen) (escritorio.getSelectedFrame());
        if (vi != null) {
            imgOrigen = vi.getLienzo().getImage();
            if (imgOrigen != null) {
                try {
                    LookupTable lt = utilidades.negativo();
                    LookupOp lop = new LookupOp(lt, null);
                    lop.filter(imgOrigen, imgOrigen);
                    vi.repaint();

                } catch (Exception e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }   
    }//GEN-LAST:event_BotonNegativoActionPerformed

    /**
     * Establece la etiqueta de valor del pixel y coordenadas de este
     * @param R componente R del pixel de la imagen sobre la que se pasa
     * @param G componente G del pixel de la imagen sobre la que se pasa
     * @param B componente B del pixel de la imagen sobre la que se pasa
     * @param a Coordenada x del punto sobre el que se pasa
     * @param b Coordenada y del punto sobre el que se pasa
     */
    void SetEtiquetaValor(String R, String G, String B, String a, String b) {
        VentanaInternaImagen vi = (VentanaInternaImagen) escritorio.getSelectedFrame();
        if (vi != null) {
            if (vi.getLienzo().getImage().getColorModel().getColorSpace().isCS_sRGB()) {
                EtiquetaValorRGB.setText("   Pixel: X:".concat(a).concat(" Y:").concat(b).concat(" R:").concat(R).concat(" G:").concat(G).concat(" B:").concat(B));
            } else if (vi.getLienzo().getImage().getColorModel().getNumColorComponents() == 1) {
                EtiquetaValorRGB.setText("   Pixel: X:".concat(a).concat(" Y:").concat(b).concat(" Grey:").concat(R));
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToolBar BarraEfectos;
    private javax.swing.JToolBar BarraHerramientas;
    private javax.swing.JMenuBar BarraMenu;
    private javax.swing.JButton BotonAbrir;
    private javax.swing.JToggleButton BotonAlisado;
    private javax.swing.JToggleButton BotonAmarillo;
    private javax.swing.JToggleButton BotonArea;
    private javax.swing.JToggleButton BotonAzul;
    private javax.swing.JButton BotonBandas1;
    private javax.swing.JButton BotonCamara;
    private javax.swing.JButton BotonCaptura;
    private javax.swing.JButton BotonContraste2;
    private javax.swing.JButton BotonContraste3;
    private javax.swing.JToggleButton BotonCurva;
    private javax.swing.JButton BotonDuplicar;
    private javax.swing.JButton BotonEnviarAlFondo;
    private javax.swing.JButton BotonEnviarAtras;
    private javax.swing.JButton BotonGrabar;
    private javax.swing.JToggleButton BotonGrandienteHorizontal;
    private javax.swing.JToggleButton BotonGrandienteVertical;
    private javax.swing.JButton BotonGuardar;
    private javax.swing.JToggleButton BotonLinea;
    private javax.swing.JButton BotonMasEscala;
    private javax.swing.JButton BotonMenosEscala;
    private javax.swing.JButton BotonMusgo;
    private javax.swing.JButton BotonNegativo;
    private javax.swing.JToggleButton BotonNegro;
    private javax.swing.JToggleButton BotonOvalo;
    private javax.swing.JButton BotonPause;
    private javax.swing.JButton BotonPlay;
    private javax.swing.JToggleButton BotonRectangulo;
    private javax.swing.JToggleButton BotonRelleno;
    private javax.swing.JToggleButton BotonRellenoGrandiente;
    private javax.swing.JToggleButton BotonRojo;
    private javax.swing.JToggleButton BotonRojo6;
    private javax.swing.JButton BotonRotacion180;
    private javax.swing.JButton BotonRotacion270;
    private javax.swing.JButton BotonRotacion90;
    private javax.swing.JToggleButton BotonSeleccion;
    private javax.swing.JButton BotonSelectorRelleno;
    private javax.swing.JButton BotonSelectorTrazo;
    private javax.swing.JButton BotonSeno2;
    private javax.swing.JButton BotonSepia;
    private javax.swing.JButton BotonSimplyRGB;
    private javax.swing.JButton BotonSpookyOp;
    private javax.swing.JButton BotonTraerAdelante;
    private javax.swing.JButton BotonTraerAlFrente;
    private javax.swing.JToggleButton BotonTrazoLibre;
    private javax.swing.JToggleButton BotonVerde;
    private javax.swing.JButton BottonContraste1;
    private javax.swing.JComboBox<String> ComboBoxEspacioColor1;
    private javax.swing.JComboBox<String> ComboBoxFiltros;
    private javax.swing.JComboBox<String> ComboBoxTrazos;
    private javax.swing.JLabel EtiquetaForma;
    private javax.swing.JLabel EtiquetaValorRGB;
    private javax.swing.JButton HerramientasBotonNuevo;
    private javax.swing.JComboBox<File> ListaReproduccion;
    private javax.swing.JMenu MenuArchivo;
    private javax.swing.JMenuItem MenuArchivoAbrir;
    private javax.swing.JMenuItem MenuArchivoGuardar;
    private javax.swing.JMenuItem MenuArchivoNuevo;
    private javax.swing.JMenu MenuAyuda;
    private javax.swing.JMenuItem MenuAyudaAcercaDe;
    private javax.swing.JMenu MenuVer;
    private javax.swing.JMenuItem MenuVerBarraEfectos;
    private javax.swing.JMenuItem MenuVerBarraEstado;
    private javax.swing.JMenuItem MenuVerBarraHerramientas;
    private javax.swing.JPanel PanelColores;
    private javax.swing.JPanel PanelConjunto;
    private javax.swing.JPanel PanelEstado;
    private javax.swing.JPanel PanelInferior;
    private javax.swing.JSlider SliderBrillo;
    private javax.swing.JSlider SliderRotacion;
    private javax.swing.JSlider SliderTransparencia;
    private javax.swing.JSpinner SpinnerGrosor;
    private javax.swing.JDesktopPane escritorio;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator10;
    private javax.swing.JToolBar.Separator jSeparator11;
    private javax.swing.JToolBar.Separator jSeparator12;
    private javax.swing.JToolBar.Separator jSeparator13;
    private javax.swing.JToolBar.Separator jSeparator14;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator7;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JToolBar.Separator jSeparator9;
    // End of variables declaration//GEN-END:variables

}
