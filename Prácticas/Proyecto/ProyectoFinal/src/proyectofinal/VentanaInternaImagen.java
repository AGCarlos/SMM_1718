/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectofinal;

import sm.cag.iu.Lienzo2DProyecto;
import java.awt.Color;

/**
 *
 * @author PC
 */
public class VentanaInternaImagen extends javax.swing.JInternalFrame  {

    VentanaPrincipal parent = null;

    
    /**
     * Creates new form VentanaInterna
     * @param parent
     */
    public VentanaInternaImagen(VentanaPrincipal parent) {
        initComponents();
        this.parent = parent;
        this.lienzo2DProyecto1.setBackground(Color.white);
    }
    
        public Lienzo2DProyecto getLienzo(){
        return this.lienzo2DProyecto1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lienzo2DProyecto1 = new sm.cag.iu.Lienzo2DProyecto();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        lienzo2DProyecto1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lienzo2DProyecto1MouseMoved(evt);
            }
        });
        jScrollPane1.setViewportView(lienzo2DProyecto1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked

    }//GEN-LAST:event_formMouseClicked

    private void lienzo2DProyecto1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lienzo2DProyecto1FocusGained

    }//GEN-LAST:event_lienzo2DProyecto1FocusGained

    private void lienzo2DProyecto1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lienzo2DProyecto1MouseClicked
    }//GEN-LAST:event_lienzo2DProyecto1MouseClicked

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        this.parent.actualizarHerramientas();
    }//GEN-LAST:event_formInternalFrameActivated

    private void lienzo2DProyecto1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lienzo2DProyecto1MouseMoved
        if (evt.getPoint().x < lienzo2DProyecto1.getImage().getWidth() && evt.getPoint().y < lienzo2DProyecto1.getImage().getHeight()) {

            if (lienzo2DProyecto1.getImage().getColorModel().getColorSpace().isCS_sRGB()) {
                int[] pixelComp = null;
                pixelComp = lienzo2DProyecto1.getImage().getRaster().getPixel(evt.getPoint().x, evt.getPoint().y, pixelComp);

                this.parent.SetEtiquetaValor(Integer.toString(pixelComp[0]), Integer.toString(pixelComp[1]), Integer.toString(pixelComp[2]), Integer.toString((int) evt.getPoint().getX()), Integer.toString((int) evt.getPoint().getY()));
            } else if (lienzo2DProyecto1.getImage().getColorModel().getNumColorComponents() == 1){
                int[] pixelComp = null;
                pixelComp = lienzo2DProyecto1.getImage().getRaster().getPixel(evt.getPoint().x, evt.getPoint().y, pixelComp);
                this.parent.SetEtiquetaValor(Integer.toString(pixelComp[0]),"","", Integer.toString((int) evt.getPoint().getX()), Integer.toString((int) evt.getPoint().getY()));
            }

        }
    }//GEN-LAST:event_lienzo2DProyecto1MouseMoved

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private sm.cag.iu.Lienzo2DProyecto lienzo2DProyecto1;
    // End of variables declaration//GEN-END:variables

}
