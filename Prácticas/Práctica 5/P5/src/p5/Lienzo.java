/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package p5;

import java.awt.*;
import java.awt.geom.*;
import java.util.List;
import java.util.ArrayList;
/**
 *
 * @author CArlos
 */
public class Lienzo extends javax.swing.JPanel {

    /**
     * Creates new form Lienzo
     */
    public Lienzo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    int forma;
    boolean edicion=false;
    Line2D  linea;
    Rectangle rect; 
    QuadCurve2D q = new QuadCurve2D.Float();
    Point pAux;
    List<Shape> vShape = new ArrayList();
    Shape s = new Rectangle();
    
    public void setForma(int a){
        forma = a ;
    }
    
    public void setEdicion(boolean a){
        edicion = a ;
    }
    
    public boolean getEdicion(){
        return edicion;
    }
    
    private Shape getSelectedShape(Point2D p){
        for(Shape s:vShape)
            if(s.contains(p)) return s;
        return null;
    }
    
    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
             
        pAux = evt.getPoint();

        switch(forma){
            //Linea
            case 0:

                if(!edicion)
                    linea = new Line2D.Float(evt.getPoint(),evt.getPoint());
                else 
                    linea = linea;
                 
                if(!edicion) 
                   vShape.add(linea);
            
            break;
            //Rectangulo
            case 1:
                
                if(!edicion) 
                    rect = new Rectangle(pAux);
                else{
                        rect = (Rectangle) getSelectedShape(evt.getPoint());
                    }
                
                if(!edicion) vShape.add(rect);
                
                 if(!edicion)
                    rect.setFrameFromDiagonal(evt.getPoint(), evt.getPoint());
                else 
                    if(rect!=null) rect.setLocation(evt.getPoint());
                 
            break;
        }
         
        this.repaint();
        
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        /*
        */
        switch(forma){
            
            //Linea
            case 0:
                if(!edicion)
                    linea.setLine(linea.getP1(),evt.getPoint());
                else
                    linea = linea;
            break;
            
            //Rectangulo
            case 1:  
                if(!edicion)
                    rect.setFrameFromDiagonal(pAux, evt.getPoint());
                else 
                    if(rect!=null) rect.setLocation(evt.getPoint());
            break;
            
        }
                
        

        this.repaint();
    }//GEN-LAST:event_formMouseDragged

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        

        switch(forma){
            
            //Linea
            case 0:
                if(!edicion)
                    linea.setLine(linea.getP1(),evt.getPoint());
                else
                    linea = linea;
            break;
                
            //Rectangulo
            case 1:
                
                if(!edicion)
                    rect.setFrameFromDiagonal(pAux, evt.getPoint());
                else 
                    if(rect!=null) rect.setLocation(evt.getPoint());
            break;
            
        }   

        this.repaint();
        
    }//GEN-LAST:event_formMouseReleased

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        
    }//GEN-LAST:event_formMouseClicked

    @Override
        public void paint(Graphics g){   
            super.paint(g);
            Graphics2D g2d=(Graphics2D)g;
            
            //Creamos una linea

            //if (linea!= null)g2d.draw(linea);
            
            //Creamos un rectangulo
           // Rectangle2D rect = new Rectangle2D.Float(100,150,50,70);
            //g2d.draw(rect);
            
            //Creamos un rectangulo redondeado
            //g2d.draw(new RoundRectangle2D.Float(500, 500,60,90,10, 10));
            
            //Creamos una elipse
            //g2d.draw(new Ellipse2D.Float(100, 250,50,80));
            
            //Creamos un arco
            //g2d.draw(new Arc2D.Double(100, 350,60,80,90, 135,Arc2D.OPEN));
            
            //Creamos un quad curve
            //QuadCurve2D q = new QuadCurve2D.Float();
            // Le asignamos las coordenadas con setCurve
            //q.setCurve(100, 150, 400, 400, 150, 100);
            //g2d.draw(q);
            
            //Creamos un cubic curve
            //CubicCurve2D c = new CubicCurve2D.Float();
             // draw CubicCurve2D.Double with set coordinates
            //c.setCurve(250, 250, 250,300, 450, 400, 450, 450);
            //g2d.draw(c);
         
            for(Shape s:vShape)
                g2d.draw(s);
            
            //Creamos un trazo libre
            /*
            int x1Points[] = {0, 100, 0, 100};
            int y1Points[] = {0, 50, 50, 0};
            GeneralPath polygon = new GeneralPath(GeneralPath.WIND_EVEN_ODD,x1Points.length);
            polygon.moveTo(x1Points[0], y1Points[0]);

            for (int index = 1; index < x1Points.length; index++) {
                    polygon.lineTo(x1Points[index], y1Points[index]);
            };

            polygon.closePath();
            g2d.draw(polygon);
            */
            //Crear una Ã¡rea
           
        }
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}

