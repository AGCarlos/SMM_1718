/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package p13;

import java.awt.Color;
import java.awt.Point;
import java.awt.Transparency;
import java.awt.color.*;
import java.awt.geom.AffineTransform;
import java.awt.geom.Rectangle2D;
import java.awt.image.*;
import java.io.File;
import javax.imageio.ImageIO;
import javax.sound.sampled.LineEvent;
import javax.sound.sampled.LineListener;
import javax.swing.JFileChooser;
import sm.cag.image.MusgoOp;
import sm.cag.image.SpookyOp;
import sm.cag.image.SimplyRGBOp;
import sm.cag.image.SepiaOp;
import sm.image.KernelProducer;
import sm.image.LookupTableProducer;
import sm.sound.SMClipPlayer;
import sm.sound.SMPlayer;
import sm.sound.SMRecorder;
import sm.sound.SMSoundRecorder;

/**
 *
 * @author PC
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
        this.setTitle("Pr√°ctica 13");
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jPanel6 = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        PanelSeno = new javax.swing.JPanel();
        BotonSeno = new javax.swing.JButton();
        BotonSeno1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        PanelEstado = new javax.swing.JPanel();
        EtiquetaForma = new javax.swing.JLabel();
        EtiquetaValorRGB = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        PanelFormas = new javax.swing.JToolBar();
        BotonHerramientasAbrir = new javax.swing.JButton();
        BotonAbrir = new javax.swing.JButton();
        BotonGuardar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        BotonPunto = new javax.swing.JToggleButton();
        BotonLinea = new javax.swing.JToggleButton();
        BotonRectangulo = new javax.swing.JToggleButton();
        BotonOvalo = new javax.swing.JToggleButton();
        BotonEditar = new javax.swing.JToggleButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        PanelColores = new javax.swing.JPanel();
        BotonNegro = new javax.swing.JButton();
        BotonBlanco = new javax.swing.JButton();
        BotonRojo = new javax.swing.JButton();
        BotonAmarillo = new javax.swing.JButton();
        BotonAzul = new javax.swing.JButton();
        BotonVerde = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        SpinnerGrosor = new javax.swing.JSpinner();
        BotonRelleno = new javax.swing.JToggleButton();
        BotonAlisar = new javax.swing.JToggleButton();
        BotonTransparecnia = new javax.swing.JToggleButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        BotonPlay = new javax.swing.JButton();
        BotonPause = new javax.swing.JButton();
        ListaReproduccion = new javax.swing.JComboBox<>();
        BotonGrabar = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        PanelHerramientas = new javax.swing.JPanel();
        PaneBrillo = new javax.swing.JPanel();
        SliderBrillo = new javax.swing.JSlider();
        PanelContraste = new javax.swing.JPanel();
        BottonContraste1 = new javax.swing.JButton();
        BotonContraste2 = new javax.swing.JButton();
        BotonContraste3 = new javax.swing.JButton();
        PanelRotacion = new javax.swing.JPanel();
        SliderRotacion = new javax.swing.JSlider();
        BotonRotacion90 = new javax.swing.JButton();
        BotonRotacion180 = new javax.swing.JButton();
        BotonRotacion270 = new javax.swing.JButton();
        PanelEscala = new javax.swing.JPanel();
        BotonMasEscala = new javax.swing.JButton();
        BotonMenosEscala = new javax.swing.JButton();
        PanelFiltro = new javax.swing.JPanel();
        ComboBoxFiltros = new javax.swing.JComboBox<>();
        PanelEfectos = new javax.swing.JPanel();
        BotonSeno2 = new javax.swing.JButton();
        BotonSepia = new javax.swing.JButton();
        BotonSimplyRGB = new javax.swing.JButton();
        BotonMusgo = new javax.swing.JButton();
        BotonSpookyOp = new javax.swing.JButton();
        PanelColor = new javax.swing.JPanel();
        BotonBandas = new javax.swing.JButton();
        ComboBoxEspacioColor = new javax.swing.JComboBox<>();
        escritorio = new javax.swing.JDesktopPane();
        BarraDeMenu = new javax.swing.JMenuBar();
        MenuArchivo = new javax.swing.JMenu();
        MenuItemArchivoNuevo = new javax.swing.JMenuItem();
        MenuItemArchivoAbrir = new javax.swing.JMenuItem();
        MenuItemArchivoGuardar = new javax.swing.JMenuItem();
        MenuArchivoAbrirAudio = new javax.swing.JMenuItem();
        MenuArchivoGrabarAudio = new javax.swing.JMenuItem();
        MenuEdicion = new javax.swing.JMenu();
        MenuItemEdicionEstado = new javax.swing.JCheckBoxMenuItem();
        MenuItemEdicionFormas = new javax.swing.JCheckBoxMenuItem();
        MenuItemEdicionAtributos = new javax.swing.JCheckBoxMenuItem();
        MenuImagen = new javax.swing.JMenu();
        MenuImagenRescaleOP = new javax.swing.JMenuItem();
        MenuImagenConvolveOP = new javax.swing.JMenuItem();
        MenuImagenLookUpOp = new javax.swing.JMenuItem();
        MenuImagenLookupSeno = new javax.swing.JMenuItem();
        MenuImagenAffineOp = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        PanelSeno.setBorder(javax.swing.BorderFactory.createTitledBorder("Seno y Sepia"));

        BotonSeno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosPractica10/sinusoidal.png"))); // NOI18N
        BotonSeno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSenoActionPerformed(evt);
            }
        });

        BotonSeno1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosp11/sepia.png"))); // NOI18N
        BotonSeno1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSeno1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelSenoLayout = new javax.swing.GroupLayout(PanelSeno);
        PanelSeno.setLayout(PanelSenoLayout);
        PanelSenoLayout.setHorizontalGroup(
            PanelSenoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelSenoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BotonSeno, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BotonSeno1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PanelSenoLayout.setVerticalGroup(
            PanelSenoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelSenoLayout.createSequentialGroup()
                .addGroup(PanelSenoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BotonSeno)
                    .addComponent(BotonSeno1))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel5.setLayout(new java.awt.BorderLayout());

        EtiquetaForma.setText("Forma");

        EtiquetaValorRGB.setText("Valor RGB");

        javax.swing.GroupLayout PanelEstadoLayout = new javax.swing.GroupLayout(PanelEstado);
        PanelEstado.setLayout(PanelEstadoLayout);
        PanelEstadoLayout.setHorizontalGroup(
            PanelEstadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEstadoLayout.createSequentialGroup()
                .addComponent(EtiquetaForma)
                .addGap(18, 18, 18)
                .addComponent(EtiquetaValorRGB)
                .addContainerGap())
        );
        PanelEstadoLayout.setVerticalGroup(
            PanelEstadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEstadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(EtiquetaForma)
                .addComponent(EtiquetaValorRGB))
        );

        jPanel5.add(PanelEstado, java.awt.BorderLayout.PAGE_END);

        jPanel11.setLayout(new java.awt.BorderLayout());
        jPanel5.add(jPanel11, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel3, java.awt.BorderLayout.PAGE_END);

        PanelFormas.setRollover(true);

        BotonHerramientasAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/p7/iconos/nuevo.png"))); // NOI18N
        BotonHerramientasAbrir.setFocusable(false);
        BotonHerramientasAbrir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonHerramientasAbrir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonHerramientasAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonHerramientasAbrirActionPerformed(evt);
            }
        });
        PanelFormas.add(BotonHerramientasAbrir);

        BotonAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/p7/iconos/abrir.png"))); // NOI18N
        BotonAbrir.setFocusable(false);
        BotonAbrir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonAbrir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAbrirActionPerformed(evt);
            }
        });
        PanelFormas.add(BotonAbrir);

        BotonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/p7/iconos/guardar.png"))); // NOI18N
        BotonGuardar.setFocusable(false);
        BotonGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonGuardarActionPerformed(evt);
            }
        });
        PanelFormas.add(BotonGuardar);
        PanelFormas.add(jSeparator1);

        BotonPunto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/p7/iconos/punto.png"))); // NOI18N
        BotonPunto.setFocusable(false);
        BotonPunto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonPunto.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonPunto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonPuntoActionPerformed(evt);
            }
        });
        PanelFormas.add(BotonPunto);

        BotonLinea.setIcon(new javax.swing.ImageIcon(getClass().getResource("/p7/iconos/linea.png"))); // NOI18N
        BotonLinea.setFocusable(false);
        BotonLinea.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonLinea.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonLinea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonLineaActionPerformed(evt);
            }
        });
        PanelFormas.add(BotonLinea);

        BotonRectangulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/p7/iconos/rectangulo.png"))); // NOI18N
        BotonRectangulo.setFocusable(false);
        BotonRectangulo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonRectangulo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonRectangulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRectanguloActionPerformed(evt);
            }
        });
        PanelFormas.add(BotonRectangulo);

        BotonOvalo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/p7/iconos/elipse.png"))); // NOI18N
        BotonOvalo.setFocusable(false);
        BotonOvalo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonOvalo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonOvalo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonOvaloActionPerformed(evt);
            }
        });
        PanelFormas.add(BotonOvalo);

        BotonEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/p7/iconos/seleccion.png"))); // NOI18N
        BotonEditar.setFocusable(false);
        BotonEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonEditarActionPerformed(evt);
            }
        });
        PanelFormas.add(BotonEditar);
        PanelFormas.add(jSeparator3);

        PanelColores.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        BotonNegro.setBackground(new java.awt.Color(0, 0, 0));
        BotonNegro.setForeground(new java.awt.Color(51, 0, 255));
        BotonNegro.setMaximumSize(new java.awt.Dimension(28, 9));
        BotonNegro.setMinimumSize(new java.awt.Dimension(28, 9));
        BotonNegro.setPreferredSize(new java.awt.Dimension(28, 9));
        BotonNegro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonNegroActionPerformed(evt);
            }
        });

        BotonBlanco.setBackground(new java.awt.Color(255, 255, 255));
        BotonBlanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonBlancoActionPerformed(evt);
            }
        });

        BotonRojo.setBackground(new java.awt.Color(255, 0, 51));
        BotonRojo.setMaximumSize(new java.awt.Dimension(28, 9));
        BotonRojo.setMinimumSize(new java.awt.Dimension(28, 9));
        BotonRojo.setPreferredSize(new java.awt.Dimension(28, 9));
        BotonRojo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRojoActionPerformed(evt);
            }
        });

        BotonAmarillo.setBackground(new java.awt.Color(255, 255, 51));
        BotonAmarillo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAmarilloActionPerformed(evt);
            }
        });

        BotonAzul.setBackground(new java.awt.Color(51, 51, 255));
        BotonAzul.setMaximumSize(new java.awt.Dimension(28, 9));
        BotonAzul.setMinimumSize(new java.awt.Dimension(28, 9));
        BotonAzul.setPreferredSize(new java.awt.Dimension(28, 9));
        BotonAzul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAzulActionPerformed(evt);
            }
        });

        BotonVerde.setBackground(new java.awt.Color(51, 255, 51));
        BotonVerde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonVerdeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelColoresLayout = new javax.swing.GroupLayout(PanelColores);
        PanelColores.setLayout(PanelColoresLayout);
        PanelColoresLayout.setHorizontalGroup(
            PanelColoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelColoresLayout.createSequentialGroup()
                .addComponent(BotonBlanco, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonAmarillo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonVerde, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonNegro, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonRojo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonAzul, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        PanelColoresLayout.setVerticalGroup(
            PanelColoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelColoresLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(PanelColoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BotonAmarillo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(BotonBlanco, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BotonVerde, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BotonNegro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BotonRojo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BotonAzul, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(2, 2, 2))
        );

        PanelFormas.add(PanelColores);
        PanelFormas.add(jSeparator4);

        SpinnerGrosor.setModel(new javax.swing.SpinnerNumberModel(0, 0, 15, 1));
        SpinnerGrosor.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SpinnerGrosorStateChanged(evt);
            }
        });
        PanelFormas.add(SpinnerGrosor);

        BotonRelleno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/p7/iconos/rellenar.png"))); // NOI18N
        BotonRelleno.setFocusable(false);
        BotonRelleno.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonRelleno.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonRelleno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRellenoActionPerformed(evt);
            }
        });
        PanelFormas.add(BotonRelleno);

        BotonAlisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/p7/iconos/alisar.png"))); // NOI18N
        BotonAlisar.setFocusable(false);
        BotonAlisar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonAlisar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonAlisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAlisarActionPerformed(evt);
            }
        });
        PanelFormas.add(BotonAlisar);

        BotonTransparecnia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/p7/iconos/transparencia.png"))); // NOI18N
        BotonTransparecnia.setFocusable(false);
        BotonTransparecnia.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonTransparecnia.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonTransparecnia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonTransparecniaActionPerformed(evt);
            }
        });
        PanelFormas.add(BotonTransparecnia);
        PanelFormas.add(jSeparator5);

        BotonPlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosPracticaSonido/play24x24.png"))); // NOI18N
        BotonPlay.setFocusable(false);
        BotonPlay.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonPlay.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonPlayActionPerformed(evt);
            }
        });
        PanelFormas.add(BotonPlay);

        BotonPause.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosPracticaSonido/stop24x24.png"))); // NOI18N
        BotonPause.setToolTipText("");
        BotonPause.setFocusable(false);
        BotonPause.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonPause.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonPauseActionPerformed(evt);
            }
        });
        PanelFormas.add(BotonPause);

        PanelFormas.add(ListaReproduccion);

        BotonGrabar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosPracticaSonido/record24x24.png"))); // NOI18N
        BotonGrabar.setFocusable(false);
        BotonGrabar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonGrabar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonGrabarActionPerformed(evt);
            }
        });
        PanelFormas.add(BotonGrabar);

        jPanel1.add(PanelFormas, java.awt.BorderLayout.PAGE_START);

        jPanel7.setLayout(new java.awt.BorderLayout());

        PaneBrillo.setBorder(javax.swing.BorderFactory.createTitledBorder("Brillo"));
        PaneBrillo.setToolTipText("");
        PaneBrillo.setPreferredSize(new java.awt.Dimension(105, 85));

        SliderBrillo.setMaximum(255);
        SliderBrillo.setMinimum(-255);
        SliderBrillo.setToolTipText("");
        SliderBrillo.setValue(0);
        SliderBrillo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderBrilloStateChanged(evt);
            }
        });
        SliderBrillo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SliderBrilloFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                SliderBrilloFocusLost(evt);
            }
        });

        javax.swing.GroupLayout PaneBrilloLayout = new javax.swing.GroupLayout(PaneBrillo);
        PaneBrillo.setLayout(PaneBrilloLayout);
        PaneBrilloLayout.setHorizontalGroup(
            PaneBrilloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PaneBrilloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SliderBrillo, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PaneBrilloLayout.setVerticalGroup(
            PaneBrilloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PaneBrilloLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SliderBrillo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        PanelContraste.setBorder(javax.swing.BorderFactory.createTitledBorder("Contraste"));

        BottonContraste1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosPractica10/contraste.png"))); // NOI18N
        BottonContraste1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonContraste1ActionPerformed(evt);
            }
        });

        BotonContraste2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosPractica10/iluminar.png"))); // NOI18N
        BotonContraste2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonContraste2ActionPerformed(evt);
            }
        });

        BotonContraste3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosPractica10/oscurecer.png"))); // NOI18N
        BotonContraste3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonContraste3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelContrasteLayout = new javax.swing.GroupLayout(PanelContraste);
        PanelContraste.setLayout(PanelContrasteLayout);
        PanelContrasteLayout.setHorizontalGroup(
            PanelContrasteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelContrasteLayout.createSequentialGroup()
                .addComponent(BottonContraste1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonContraste2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonContraste3)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        PanelContrasteLayout.setVerticalGroup(
            PanelContrasteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelContrasteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelContrasteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BotonContraste3)
                    .addComponent(BotonContraste2)
                    .addComponent(BottonContraste1))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        PanelRotacion.setBorder(javax.swing.BorderFactory.createTitledBorder("Rotaci√≥n"));

        SliderRotacion.setMaximum(360);
        SliderRotacion.setMinorTickSpacing(50);
        SliderRotacion.setPaintTicks(true);
        SliderRotacion.setValue(0);
        SliderRotacion.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderRotacionStateChanged(evt);
            }
        });
        SliderRotacion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SliderRotacionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                SliderRotacionFocusLost(evt);
            }
        });

        BotonRotacion90.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosPractica10/rotacion90.png"))); // NOI18N
        BotonRotacion90.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRotacion90ActionPerformed(evt);
            }
        });

        BotonRotacion180.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosPractica10/rotacion180.png"))); // NOI18N
        BotonRotacion180.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRotacion180ActionPerformed(evt);
            }
        });

        BotonRotacion270.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosPractica10/rotacion270.png"))); // NOI18N
        BotonRotacion270.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRotacion270ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelRotacionLayout = new javax.swing.GroupLayout(PanelRotacion);
        PanelRotacion.setLayout(PanelRotacionLayout);
        PanelRotacionLayout.setHorizontalGroup(
            PanelRotacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelRotacionLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SliderRotacion, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BotonRotacion90)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonRotacion180)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonRotacion270))
        );
        PanelRotacionLayout.setVerticalGroup(
            PanelRotacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelRotacionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelRotacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(BotonRotacion270)
                    .addComponent(BotonRotacion180)
                    .addComponent(BotonRotacion90)
                    .addComponent(SliderRotacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        PanelEscala.setBorder(javax.swing.BorderFactory.createTitledBorder("Escala"));

        BotonMasEscala.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosPractica10/aumentar.png"))); // NOI18N
        BotonMasEscala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonMasEscalaActionPerformed(evt);
            }
        });

        BotonMenosEscala.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosPractica10/disminuir.png"))); // NOI18N
        BotonMenosEscala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonMenosEscalaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelEscalaLayout = new javax.swing.GroupLayout(PanelEscala);
        PanelEscala.setLayout(PanelEscalaLayout);
        PanelEscalaLayout.setHorizontalGroup(
            PanelEscalaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEscalaLayout.createSequentialGroup()
                .addComponent(BotonMasEscala)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonMenosEscala))
        );
        PanelEscalaLayout.setVerticalGroup(
            PanelEscalaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEscalaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelEscalaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BotonMenosEscala)
                    .addComponent(BotonMasEscala))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        PanelFiltro.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtro"));

        ComboBoxFiltros.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Media", "Binomial", "Enfoque", "Relieve", "Laplaciano" }));
        ComboBoxFiltros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxFiltrosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelFiltroLayout = new javax.swing.GroupLayout(PanelFiltro);
        PanelFiltro.setLayout(PanelFiltroLayout);
        PanelFiltroLayout.setHorizontalGroup(
            PanelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelFiltroLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ComboBoxFiltros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PanelFiltroLayout.setVerticalGroup(
            PanelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelFiltroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ComboBoxFiltros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PanelEfectos.setBorder(javax.swing.BorderFactory.createTitledBorder("Efectos"));

        BotonSeno2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosPractica10/sinusoidal.png"))); // NOI18N
        BotonSeno2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSeno2ActionPerformed(evt);
            }
        });

        BotonSepia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosp11/sepia.png"))); // NOI18N
        BotonSepia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSepiaActionPerformed(evt);
            }
        });

        BotonSimplyRGB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosp11/lel.png"))); // NOI18N
        BotonSimplyRGB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSimplyRGBActionPerformed(evt);
            }
        });

        BotonMusgo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosp11/musgo.png"))); // NOI18N
        BotonMusgo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonMusgoActionPerformed(evt);
            }
        });

        BotonSpookyOp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosp11/spooky.png"))); // NOI18N
        BotonSpookyOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSpookyOpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelEfectosLayout = new javax.swing.GroupLayout(PanelEfectos);
        PanelEfectos.setLayout(PanelEfectosLayout);
        PanelEfectosLayout.setHorizontalGroup(
            PanelEfectosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEfectosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BotonSeno2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BotonSepia, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonSimplyRGB, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonMusgo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonSpookyOp, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        PanelEfectosLayout.setVerticalGroup(
            PanelEfectosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BotonSeno2)
            .addComponent(BotonSepia)
            .addComponent(BotonSimplyRGB)
            .addComponent(BotonMusgo)
            .addComponent(BotonSpookyOp)
        );

        PanelColor.setBorder(javax.swing.BorderFactory.createTitledBorder("Color"));

        BotonBandas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosp11/bandas.png"))); // NOI18N
        BotonBandas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonBandasActionPerformed(evt);
            }
        });

        ComboBoxEspacioColor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "sRGB", "YCC", "Grey" }));
        ComboBoxEspacioColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxEspacioColorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelColorLayout = new javax.swing.GroupLayout(PanelColor);
        PanelColor.setLayout(PanelColorLayout);
        PanelColorLayout.setHorizontalGroup(
            PanelColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelColorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BotonBandas, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ComboBoxEspacioColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelColorLayout.setVerticalGroup(
            PanelColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BotonBandas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(PanelColorLayout.createSequentialGroup()
                .addComponent(ComboBoxEspacioColor)
                .addContainerGap())
        );

        javax.swing.GroupLayout PanelHerramientasLayout = new javax.swing.GroupLayout(PanelHerramientas);
        PanelHerramientas.setLayout(PanelHerramientasLayout);
        PanelHerramientasLayout.setHorizontalGroup(
            PanelHerramientasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelHerramientasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PaneBrillo, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(PanelFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelContraste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(PanelEfectos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelRotacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelEscala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        PanelHerramientasLayout.setVerticalGroup(
            PanelHerramientasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelHerramientasLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(PanelHerramientasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PanelContraste, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PaneBrillo, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                    .addComponent(PanelRotacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelEscala, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelFiltro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(PanelHerramientasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelHerramientasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelEfectos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel7.add(PanelHerramientas, java.awt.BorderLayout.PAGE_END);

        javax.swing.GroupLayout escritorioLayout = new javax.swing.GroupLayout(escritorio);
        escritorio.setLayout(escritorioLayout);
        escritorioLayout.setHorizontalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1404, Short.MAX_VALUE)
        );
        escritorioLayout.setVerticalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 319, Short.MAX_VALUE)
        );

        jPanel7.add(escritorio, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel7, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        MenuArchivo.setText("Archivo");
        MenuArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuArchivoActionPerformed(evt);
            }
        });

        MenuItemArchivoNuevo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.ALT_MASK));
        MenuItemArchivoNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/p7/iconos/nuevo.png"))); // NOI18N
        MenuItemArchivoNuevo.setText("Nuevo");
        MenuItemArchivoNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemArchivoNuevoActionPerformed(evt);
            }
        });
        MenuArchivo.add(MenuItemArchivoNuevo);

        MenuItemArchivoAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK));
        MenuItemArchivoAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/p7/iconos/abrir.png"))); // NOI18N
        MenuItemArchivoAbrir.setText("Abrir");
        MenuItemArchivoAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemArchivoAbrirActionPerformed(evt);
            }
        });
        MenuArchivo.add(MenuItemArchivoAbrir);

        MenuItemArchivoGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.ALT_MASK));
        MenuItemArchivoGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/p7/iconos/guardar.png"))); // NOI18N
        MenuItemArchivoGuardar.setText("Guardar");
        MenuItemArchivoGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemArchivoGuardarActionPerformed(evt);
            }
        });
        MenuArchivo.add(MenuItemArchivoGuardar);

        MenuArchivoAbrirAudio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosPracticaSonido/openAudio24x24.png"))); // NOI18N
        MenuArchivoAbrirAudio.setText("Abrir audio");
        MenuArchivoAbrirAudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuArchivoAbrirAudioActionPerformed(evt);
            }
        });
        MenuArchivo.add(MenuArchivoAbrirAudio);

        MenuArchivoGrabarAudio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosPracticaSonido/record24x24.png"))); // NOI18N
        MenuArchivoGrabarAudio.setText("Grabar audio");
        MenuArchivoGrabarAudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuArchivoGrabarAudioActionPerformed(evt);
            }
        });
        MenuArchivo.add(MenuArchivoGrabarAudio);

        BarraDeMenu.add(MenuArchivo);

        MenuEdicion.setText("Edici√≥n");

        MenuItemEdicionEstado.setSelected(true);
        MenuItemEdicionEstado.setText("Ver barra de estado");
        MenuItemEdicionEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemEdicionEstadoActionPerformed(evt);
            }
        });
        MenuEdicion.add(MenuItemEdicionEstado);

        MenuItemEdicionFormas.setSelected(true);
        MenuItemEdicionFormas.setText("Ver barra de herramientas");
        MenuItemEdicionFormas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemEdicionFormasActionPerformed(evt);
            }
        });
        MenuEdicion.add(MenuItemEdicionFormas);

        MenuItemEdicionAtributos.setSelected(true);
        MenuItemEdicionAtributos.setText("Ver barra de imagen");
        MenuItemEdicionAtributos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemEdicionAtributosActionPerformed(evt);
            }
        });
        MenuEdicion.add(MenuItemEdicionAtributos);

        BarraDeMenu.add(MenuEdicion);

        MenuImagen.setText("Imagen");
        MenuImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuImagenActionPerformed(evt);
            }
        });

        MenuImagenRescaleOP.setText("RescaleOP");
        MenuImagenRescaleOP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuImagenRescaleOPActionPerformed(evt);
            }
        });
        MenuImagen.add(MenuImagenRescaleOP);

        MenuImagenConvolveOP.setText("ConvolveOP");
        MenuImagenConvolveOP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuImagenConvolveOPActionPerformed(evt);
            }
        });
        MenuImagen.add(MenuImagenConvolveOP);

        MenuImagenLookUpOp.setText("LookUpOp");
        MenuImagenLookUpOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuImagenLookUpOpActionPerformed(evt);
            }
        });
        MenuImagen.add(MenuImagenLookUpOp);

        MenuImagenLookupSeno.setText("LookUpOpSeno");
        MenuImagenLookupSeno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuImagenLookupSenoActionPerformed(evt);
            }
        });
        MenuImagen.add(MenuImagenLookupSeno);

        MenuImagenAffineOp.setText("AffineTransformOp");
        MenuImagenAffineOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuImagenAffineOpActionPerformed(evt);
            }
        });
        MenuImagen.add(MenuImagenAffineOp);

        BarraDeMenu.add(MenuImagen);

        setJMenuBar(BarraDeMenu);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonNegroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonNegroActionPerformed
        VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setColor(Color.black);
        }

        this.repaint();
    }//GEN-LAST:event_BotonNegroActionPerformed

    private void BotonBlancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonBlancoActionPerformed
        VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setColor(Color.white);
        }

        this.repaint();

    }//GEN-LAST:event_BotonBlancoActionPerformed

    private void BotonRojoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRojoActionPerformed
        VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setColor(Color.red);
        }

        this.repaint();

    }//GEN-LAST:event_BotonRojoActionPerformed

    private void BotonAmarilloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAmarilloActionPerformed
        VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setColor(Color.yellow);
        }
        this.repaint();

    }//GEN-LAST:event_BotonAmarilloActionPerformed

    private void BotonAzulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAzulActionPerformed
        VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setColor(Color.blue);
        }
        this.repaint();

    }//GEN-LAST:event_BotonAzulActionPerformed

    private void BotonVerdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonVerdeActionPerformed
        VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setColor(Color.green);
        }
        this.repaint();

    }//GEN-LAST:event_BotonVerdeActionPerformed

    private void MenuItemArchivoGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemArchivoGuardarActionPerformed
        VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            JFileChooser dlg = new JFileChooser();
            int resp = dlg.showSaveDialog(this);
            if (resp == JFileChooser.APPROVE_OPTION) {
                try {
                    BufferedImage img = vi.getLienzo().getImage(true);
                    if (img != null) {
                        File f = dlg.getSelectedFile();
                        ImageIO.write(img, "jpg", f);
                        vi.setTitle(f.getName());
                    }
                } catch (Exception ex) {
                    System.err.println("Error al guardar la imagen");
                }
            }
        }
    }//GEN-LAST:event_MenuItemArchivoGuardarActionPerformed

    boolean barraEst = true;
    boolean barraForma = true;
    boolean barraAtributos = true;
    
    private void MenuItemEdicionEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemEdicionEstadoActionPerformed
        
        if (barraEst){
            barraEst=false;
            PanelEstado.setVisible(false);
        } else {
            barraEst=true; PanelEstado.setVisible(true);
        }

    }//GEN-LAST:event_MenuItemEdicionEstadoActionPerformed

    private void MenuItemEdicionFormasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemEdicionFormasActionPerformed
        if (barraForma){
            barraForma=false;
            PanelFormas.setVisible(false);
        } else {
            barraForma=true; PanelFormas.setVisible(true);
        }
    }//GEN-LAST:event_MenuItemEdicionFormasActionPerformed

    private void MenuItemArchivoNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemArchivoNuevoActionPerformed

        VentanaInterna vi = new VentanaInterna(this);
        escritorio.add(vi);
        vi.setVisible(true);
        vi.setSize(300, 300);
        vi.setLocation(a,b);a+=20;b+=20;
        
        BufferedImage img;
        img = new BufferedImage(300, 300, BufferedImage.TYPE_INT_RGB);
                img.createGraphics().fill(new Rectangle2D.Float(0.0f,0.0f,img.getWidth(),img.getHeight()));
        vi.getLienzo().setImage(img);
    }//GEN-LAST:event_MenuItemArchivoNuevoActionPerformed

    private void BotonPuntoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonPuntoActionPerformed
        VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setForma(0);
        }

        BotonLinea.setSelected(false);
        BotonRectangulo.setSelected(false);
        BotonOvalo.setSelected(false);

        EtiquetaForma.setText("Punto");
    }//GEN-LAST:event_BotonPuntoActionPerformed

    private void BotonLineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonLineaActionPerformed
        VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setForma(1);
        }

        BotonPunto.setSelected(false);
        BotonRectangulo.setSelected(false);
        BotonOvalo.setSelected(false);

        EtiquetaForma.setText("Linea");

    }//GEN-LAST:event_BotonLineaActionPerformed

    private void BotonRectanguloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRectanguloActionPerformed
        VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setForma(2);
        }

        BotonLinea.setSelected(false);
        BotonPunto.setSelected(false);
        BotonOvalo.setSelected(false);

        EtiquetaForma.setText("Rect√°ngulo");
    }//GEN-LAST:event_BotonRectanguloActionPerformed

    private void BotonOvaloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonOvaloActionPerformed
        VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setForma(3);
        }

        BotonLinea.setSelected(false);
        BotonRectangulo.setSelected(false);
        BotonPunto.setSelected(false);

        EtiquetaForma.setText("√ìvalo");
    }//GEN-LAST:event_BotonOvaloActionPerformed

    private void SpinnerGrosorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SpinnerGrosorStateChanged
        VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            int grosor = (int) SpinnerGrosor.getValue();
            vi.getLienzo().setGrosor(grosor);
        }

        this.repaint();
    }//GEN-LAST:event_SpinnerGrosorStateChanged

    private void MenuItemEdicionAtributosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemEdicionAtributosActionPerformed
        if (barraAtributos){
            barraAtributos=false;
            PanelHerramientas.setVisible(false);
        } else {
            barraAtributos=true; PanelHerramientas.setVisible(true);
        }
    }//GEN-LAST:event_MenuItemEdicionAtributosActionPerformed

    private void MenuItemArchivoAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemArchivoAbrirActionPerformed
        JFileChooser dlg = new JFileChooser();
        int resp = dlg.showOpenDialog(this);
        if (resp == JFileChooser.APPROVE_OPTION) {
            try {
                File f = dlg.getSelectedFile();
                BufferedImage img = ImageIO.read(f);
                VentanaInterna vi = new VentanaInterna(this);
                vi.getLienzo().setImage(img);
                this.escritorio.add(vi);
                vi.setTitle(f.getName());
                vi.setVisible(true);
            } catch (Exception ex) {
                System.err.println("Error al leer la imagen");
            }
        }
    }//GEN-LAST:event_MenuItemArchivoAbrirActionPerformed

    private void MenuImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuImagenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MenuImagenActionPerformed

    private void MenuImagenRescaleOPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuImagenRescaleOPActionPerformed
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgSource = vi.getLienzo().getImage();
            if (imgSource != null) {
                try {
                    RescaleOp rop = new RescaleOp(1.0F, 100.0F, null);
                    rop.filter(imgSource, imgSource);
                    vi.getLienzo().repaint();
                } catch (IllegalArgumentException e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_MenuImagenRescaleOPActionPerformed

    private void MenuImagenConvolveOPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuImagenConvolveOPActionPerformed
        
    }//GEN-LAST:event_MenuImagenConvolveOPActionPerformed
    private BufferedImage imgOrigen;
    
    private void SliderBrilloFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SliderBrilloFocusGained
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            ColorModel cm = vi.getLienzo().getImage().getColorModel();
            WritableRaster raster = vi.getLienzo().getImage().copyData(null);
            boolean alfaPre = vi.getLienzo().getImage().isAlphaPremultiplied();
            imgOrigen = new BufferedImage(cm, raster, alfaPre, null);            
        }
    }//GEN-LAST:event_SliderBrilloFocusGained

    private void SliderBrilloFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SliderBrilloFocusLost
        imgOrigen = null;
        SliderBrillo.setValue(0);
    }//GEN-LAST:event_SliderBrilloFocusLost

    private void SliderBrilloStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderBrilloStateChanged
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            RescaleOp rop = new RescaleOp(1.0F, (int) SliderBrillo.getValue(), null);
            rop.filter(imgOrigen, vi.getLienzo().getImage());
            vi.getLienzo().repaint();
            escritorio.repaint();

        }
    }//GEN-LAST:event_SliderBrilloStateChanged


    private void MenuImagenLookUpOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuImagenLookUpOpActionPerformed

    }//GEN-LAST:event_MenuImagenLookUpOpActionPerformed

    private void MenuImagenAffineOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuImagenAffineOpActionPerformed
        
    }//GEN-LAST:event_MenuImagenAffineOpActionPerformed

    
    private void MenuImagenLookupSenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuImagenLookupSenoActionPerformed
        
    }//GEN-LAST:event_MenuImagenLookupSenoActionPerformed

    private void BotonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonEditarActionPerformed
        VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            if (vi.getLienzo().getEdicion()) {
                vi.getLienzo().setEdicion(false);
            } else {
                vi.getLienzo().setEdicion(true);
            }
        }

        this.repaint();
    }//GEN-LAST:event_BotonEditarActionPerformed

    private void BotonRellenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRellenoActionPerformed
        VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            if (vi.getLienzo().getRelleno()) {
                vi.getLienzo().setRelleno(false);
            } else {
                vi.getLienzo().setRelleno(true);
            }
        }

        this.repaint();
    }//GEN-LAST:event_BotonRellenoActionPerformed

    private void BotonAlisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAlisarActionPerformed
        VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            if (vi.getLienzo().getAlisado()) {
                vi.getLienzo().setAlisado(false);
            } else {
                vi.getLienzo().setAlisado(true);
            }
        }

        this.repaint();
    }//GEN-LAST:event_BotonAlisarActionPerformed

    private void BotonTransparecniaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonTransparecniaActionPerformed
        VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            if (vi.getLienzo().getTransparencia()) {
                vi.getLienzo().setTransparencia(false);
            } else {
                vi.getLienzo().setTransparencia(true);
            }
        }

        this.repaint();
    }//GEN-LAST:event_BotonTransparecniaActionPerformed

    private void BotonContraste3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonContraste3ActionPerformed
       VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgOrigen = vi.getLienzo().getImage();
            if (imgOrigen != null) {
                try {
                    int type = LookupTableProducer.TYPE_POWER;
                    LookupTable lt = LookupTableProducer.createLookupTable(type);
                    LookupOp lop = new LookupOp(lt, null);
// Imagen origen y destino iguales
                    lop.filter(imgOrigen, imgOrigen);
                    vi.repaint();
                } catch (Exception e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }                            
        escritorio.repaint();
    }//GEN-LAST:event_BotonContraste3ActionPerformed

    private LookupTable seno(double w) {
        double K = 255.0; // Cte de normalizacioÃÅn
        // CoÃÅdigo implementado f(x)=|sin(wx)|
        
        K = K / Math.sin(Math.toRadians(90.0));

        byte[] lt = new byte[256];
        for (int i = 0; i < 255; ++i) {
            lt[i] = (byte)(K * Math.abs( Math.sin(Math.toRadians(w * (double) i))));
        }

        ByteLookupTable slt = new ByteLookupTable(0, lt);
        return slt;
    }
    
    private void BotonSenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSenoActionPerformed
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgOrigen = vi.getLienzo().getImage();
            if (imgOrigen != null) {
                try {
                    LookupTable lt = this.seno(180.0 / 255.0);
                    LookupOp lop = new LookupOp(lt, null);
                    lop.filter(imgOrigen, imgOrigen);
                    vi.repaint();

                } catch (Exception e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_BotonSenoActionPerformed
    
    private void ComboBoxFiltrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxFiltrosActionPerformed
        Kernel k = KernelProducer.createKernel(KernelProducer.TYPE_MEDIA_3x3);
        Object selectedItem = ComboBoxFiltros.getSelectedItem();
        String selectedItemStr = selectedItem.toString();

        switch (selectedItemStr) {
            case "Media":
                 k = KernelProducer.createKernel(KernelProducer.TYPE_MEDIA_3x3);
                break;
            
            case "Binomial":
                 k = KernelProducer.createKernel(KernelProducer.TYPE_BINOMIAL_3x3);
                break;
            
            case "Enfoque":
                 k = KernelProducer.createKernel(KernelProducer.TYPE_ENFOQUE_3x3);
                break;
                
            case "Relieve":
                 k = KernelProducer.createKernel(KernelProducer.TYPE_RELIEVE_3x3);
                break;
                
            case "Laplaciano":
                 k = KernelProducer.createKernel(KernelProducer.TYPE_LAPLACIANA_3x3);
                break;    
        }

        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgSource = vi.getLienzo().getImage();
            if (imgSource != null) {
                try {
                    ConvolveOp cop = new ConvolveOp(k,ConvolveOp.EDGE_NO_OP,null);
                    BufferedImage imgdest = cop.filter(imgSource, null);
                    vi.getLienzo().setImage(imgdest);
                    vi.getLienzo().repaint();
                } catch (IllegalArgumentException e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }

        escritorio.repaint();

    }//GEN-LAST:event_ComboBoxFiltrosActionPerformed

    private void BotonRotacion180ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRotacion180ActionPerformed
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgOrigen = vi.getLienzo().getImage();
            if (imgOrigen != null) {
                try {
                    double r = Math.toRadians(180);
                    Point p = new Point(imgOrigen.getWidth() / 2, imgOrigen.getHeight() / 2);
                    AffineTransform at = AffineTransform.getRotateInstance(r, p.x, p.y);
                    AffineTransformOp atop;
                    atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                    BufferedImage imgDestino = atop.filter(imgOrigen, null);
                    vi.getLienzo().setImage(imgDestino);
                    vi.repaint();
                } catch (Exception e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_BotonRotacion180ActionPerformed

    private void BotonContraste2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonContraste2ActionPerformed
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgOrigen = vi.getLienzo().getImage();
            if (imgOrigen != null) {
                try {
                    int type = LookupTableProducer.TYPE_LOGARITHM;
                    LookupTable lt = LookupTableProducer.createLookupTable(type);
                    LookupOp lop = new LookupOp(lt, null);
// Imagen origen y destino iguales
                    lop.filter(imgOrigen, imgOrigen);
                    vi.repaint();
                } catch (Exception e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }                                    
        escritorio.repaint();

    }//GEN-LAST:event_BotonContraste2ActionPerformed

    private void BottonContraste1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonContraste1ActionPerformed
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgOrigen = vi.getLienzo().getImage();
            if (imgOrigen != null) {
                try {
                    int type = LookupTableProducer.TYPE_SFUNCION;
                    LookupTable lt = LookupTableProducer.createLookupTable(type);
                    LookupOp lop = new LookupOp(lt, null);
                    // Imagen origen y destino iguales
                    lop.filter(imgOrigen, imgOrigen);
                    vi.repaint();
                } catch (Exception e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
        escritorio.repaint();
    }//GEN-LAST:event_BottonContraste1ActionPerformed

    private void BotonRotacion90ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRotacion90ActionPerformed
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
                if (vi != null) {
                    BufferedImage imgOrigen = vi.getLienzo().getImage();
                    if (imgOrigen != null) {
                        try {
                            double r = Math.toRadians(90);
                            Point p = new Point(imgOrigen.getWidth() / 2, imgOrigen.getHeight() / 2);
                            AffineTransform at = AffineTransform.getRotateInstance(r, p.x, p.y);
                            AffineTransformOp atop;
                            atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                            
                            //BufferedImage imgDestino = new BufferedImage(imgOrigen.getHeight(),imgOrigen.getWidth(),BufferedImage.TYPE_INT_ARGB);
                            //atop.filter(imgOrigen, imgDestino);
                            BufferedImage imgDestino = atop.filter(imgOrigen, null);
                            vi.getLienzo().setImage(imgDestino);
                            
                            vi.repaint();
                        } catch (Exception e) {
                            System.err.println(e.getLocalizedMessage());
                        }
                    }
                }        // TODO add your handling code here:
    }//GEN-LAST:event_BotonRotacion90ActionPerformed

    private void BotonRotacion270ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRotacion270ActionPerformed
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
                if (vi != null) {
                    BufferedImage imgOrigen = vi.getLienzo().getImage();
                    if (imgOrigen != null) {
                        try {
                            double r = Math.toRadians(270);
                            Point p = new Point(imgOrigen.getWidth() / 2, imgOrigen.getHeight() / 2);
                            AffineTransform at = AffineTransform.getRotateInstance(r, p.x, p.y);
                            AffineTransformOp atop;
                            atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                            BufferedImage imgDestino = atop.filter(imgOrigen, null);
                            vi.getLienzo().setImage(imgDestino);
                            vi.repaint();
                        } catch (Exception e) {
                            System.err.println(e.getLocalizedMessage());
                        }
                    }
                }        // TODO add your handling code here:
    }//GEN-LAST:event_BotonRotacion270ActionPerformed

    private void BotonMasEscalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonMasEscalaActionPerformed
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
                if (vi != null) {
                    BufferedImage imgOrigen = vi.getLienzo().getImage();
                    if (imgOrigen != null) {
                        try {
                            double r = Math.toRadians(270);
                            Point p = new Point(imgOrigen.getWidth() / 2, imgOrigen.getHeight() / 2);
                            AffineTransform at = AffineTransform.getScaleInstance(1.25,1.25);
                            AffineTransformOp atop;
                            atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                            BufferedImage imgDestino = atop.filter(imgOrigen, null);
                            vi.getLienzo().setImage(imgDestino);
                            vi.repaint();
                        } catch (Exception e) {
                            System.err.println(e.getLocalizedMessage());
                        }
                    }
                }
    }//GEN-LAST:event_BotonMasEscalaActionPerformed

    private void BotonMenosEscalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonMenosEscalaActionPerformed
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
                        if (vi != null) {
                            BufferedImage imgOrigen = vi.getLienzo().getImage();
                            if (imgOrigen != null) {
                                try {
                                    double r = Math.toRadians(270);
                                    Point p = new Point(imgOrigen.getWidth() / 2, imgOrigen.getHeight() / 2);
                                    AffineTransform at = AffineTransform.getScaleInstance(0.75,0.75);
                                    AffineTransformOp atop;
                                    atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                                    BufferedImage imgDestino = atop.filter(imgOrigen, null);
                                    vi.getLienzo().setImage(imgDestino);
                                    vi.repaint();
                                } catch (Exception e) {
                                    System.err.println(e.getLocalizedMessage());
                                }
                            }
                        }        // TODO add your handling code here:
    }//GEN-LAST:event_BotonMenosEscalaActionPerformed

    private void SliderRotacionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderRotacionStateChanged
            VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
                        if (vi != null) {
                            if (imgOrigen != null) {
                                try {
                                    double r = Math.toRadians(SliderRotacion.getValue());
                                    Point p = new Point(imgOrigen.getWidth() / 2, imgOrigen.getHeight() / 2);
                                    AffineTransform at = AffineTransform.getRotateInstance(r, p.x, p.y);
                                    AffineTransformOp atop;
                                    atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                                    BufferedImage imgDestino = atop.filter(imgOrigen, null);
                                    vi.getLienzo().setImage(imgDestino);
                                    vi.repaint();
                                } catch (Exception e) {
                                    System.err.println(e.getLocalizedMessage());
                                }
                            }
                        }       // TODO add your handling code here:
    }//GEN-LAST:event_SliderRotacionStateChanged

    private void SliderRotacionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SliderRotacionFocusGained
         VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
                        if (vi != null) {
                            imgOrigen = vi.getLienzo().getImage();
                        }
    }//GEN-LAST:event_SliderRotacionFocusGained

    private void SliderRotacionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SliderRotacionFocusLost
        imgOrigen = null;
        SliderRotacion.setValue(0);        // TODO add your handling code here:
    }//GEN-LAST:event_SliderRotacionFocusLost

    private void BotonSeno1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSeno1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BotonSeno1ActionPerformed

    private void BotonSeno2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSeno2ActionPerformed
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
            if (vi != null) {
                BufferedImage imgOrigen = vi.getLienzo().getImage();
                if (imgOrigen != null) {
                    try {
                        LookupTable lt = this.seno(180.0 / 255.0);
                        LookupOp lop = new LookupOp(lt, null);
                        lop.filter(imgOrigen, imgOrigen);
                        vi.repaint();

                    } catch (Exception e) {
                        System.err.println(e.getLocalizedMessage());
                    }
                }
            }        // TODO add your handling code here:
    }//GEN-LAST:event_BotonSeno2ActionPerformed

    private void BotonSepiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSepiaActionPerformed
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
            if (vi != null) {
                BufferedImage imgOrigen = vi.getLienzo().getImage();
                if (imgOrigen != null) {
                    try {
                        SepiaOp sop = new SepiaOp();
                        sop.filter(imgOrigen, imgOrigen);                        
                        vi.repaint();

                    } catch (Exception e) {
                        System.err.println(e.getLocalizedMessage());
                    }
                }
            }
    }//GEN-LAST:event_BotonSepiaActionPerformed
    
    private BufferedImage getBand(int iBanda,BufferedImage src){
        
        //Creamos el modelo de color de la nueva imagen basado en un espcio de color GRAY
        ColorSpace cs = ColorSpace.getInstance(ColorSpace.CS_GRAY);
        ComponentColorModel cm = new ComponentColorModel(cs, false, false,
        Transparency.OPAQUE,
        DataBuffer.TYPE_BYTE);
        
        //Creamos el nuevo raster a partir del raster de la imagen original
        int bandList[] = {iBanda};
        WritableRaster bandRaster = (WritableRaster)src.getRaster().createWritableChild(0,0,
        src.getWidth(), src.getHeight(), 0, 0, bandList);
        
        //Creamos una nueva imagen que contiene como raster el correspondiente a la banda
        BufferedImage imgBanda = new BufferedImage(cm, bandRaster, false, null);
        
        return imgBanda;
    }
    
    private void BotonBandasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonBandasActionPerformed
        int a = 20, b=20;
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
            if (vi != null) {
                BufferedImage imgOrigen = vi.getLienzo().getImage();
                if (imgOrigen != null) {
                    try {
                        BufferedImage banda;
                        for(int i = 0; i < imgOrigen.getColorModel().getNumColorComponents();i++ ){
                            String s = Integer.toString(i);
                            banda = getBand(i,imgOrigen);
                            
                            VentanaInterna vib = new VentanaInterna(this);
                            vib.getLienzo().setImage(banda);
                            this.escritorio.add(vib);
                            vib.setTitle("Banda ".concat(s));
                            vib.setVisible(true);
                            vib.setLocation(a, b);a+=20;b+=20;

                            escritorio.repaint();
                        }

                    } catch (Exception e) {
                        System.err.println(e.getLocalizedMessage());
                    }
                }
            }
    }//GEN-LAST:event_BotonBandasActionPerformed

    private void ComboBoxEspacioColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxEspacioColorActionPerformed
        Object selectedItem = ComboBoxEspacioColor.getSelectedItem();
        String selectedItemStr = selectedItem.toString();
        ColorSpace cs = ColorSpace.getInstance(ColorSpace.CS_sRGB);
        switch (selectedItemStr) {
            case "sRGB":
                cs = ColorSpace.getInstance(ColorSpace.CS_sRGB);
   
                break;
            
            case "YCC":
                cs = ColorSpace.getInstance(ColorSpace.CS_PYCC);

                break;
            
            case "Grey":
                cs = ColorSpace.getInstance(ColorSpace.CS_GRAY);

                break;
        }
        
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
            if (vi != null) {
                BufferedImage imgOrigen = vi.getLienzo().getImage();
                if (imgOrigen != null) {
                    try {
                        BufferedImage imgNuevoModelo;
                        
                            //if (imgOrigen.getColorModel().getColorSpace().isCS_sRGB()) {
                                ColorConvertOp cop = new ColorConvertOp(cs, null);
                                imgNuevoModelo = cop.filter(imgOrigen, null);
                            //}
                            
                            VentanaInterna vib = new VentanaInterna(this);
                            vib.getLienzo().setImage(imgNuevoModelo);
                            this.escritorio.add(vib);
                            vib.setTitle("Banda ");
                            vib.setVisible(true);
                            
                            escritorio.repaint();

                    } catch (Exception e) {
                        System.err.println(e.getLocalizedMessage());
                    }
                }
            }
        
    }//GEN-LAST:event_ComboBoxEspacioColorActionPerformed
    
    int a=20,b=20;
    private void BotonHerramientasAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonHerramientasAbrirActionPerformed
        VentanaInterna vi = new VentanaInterna(this);
        escritorio.add(vi);
        vi.setVisible(true);
        vi.setSize(300, 300);
        vi.setLocation(a,b);a+=20;b+=20;
        
        BufferedImage img;
        img = new BufferedImage(300, 300, BufferedImage.TYPE_INT_RGB);
        img.createGraphics().setPaint(Color.white);
        img.createGraphics().fill(new Rectangle2D.Float(0.0f,0.0f,img.getWidth(),img.getHeight()));
        vi.getLienzo().setImage(img);
    }//GEN-LAST:event_BotonHerramientasAbrirActionPerformed

    private void BotonAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAbrirActionPerformed
        JFileChooser dlg = new JFileChooser();
        int resp = dlg.showOpenDialog(this);
        if (resp == JFileChooser.APPROVE_OPTION) {
            try {
                File f = dlg.getSelectedFile();
                BufferedImage img = ImageIO.read(f);
                VentanaInterna vi = new VentanaInterna(this);
                vi.getLienzo().setImage(img);
                this.escritorio.add(vi);
                vi.setTitle(f.getName());
                vi.setVisible(true);
            } catch (Exception ex) {
                System.err.println("Error al leer la imagen");
            }
        }
    }//GEN-LAST:event_BotonAbrirActionPerformed

    private void BotonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonGuardarActionPerformed
        VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            JFileChooser dlg = new JFileChooser();
            int resp = dlg.showSaveDialog(this);
            if (resp == JFileChooser.APPROVE_OPTION) {
                try {
                    BufferedImage img = vi.getLienzo().getImage(false);
                    if (img != null) {
                        File f = dlg.getSelectedFile();
                        ImageIO.write(img, "png", f);
                        vi.setTitle(f.getName());
                    }
                } catch (Exception ex) {
                    System.err.println("Error al guardar la imagen");
                }
            }
        }
    }//GEN-LAST:event_BotonGuardarActionPerformed

    private void BotonSimplyRGBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSimplyRGBActionPerformed
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
            if (vi != null) {
                BufferedImage imgOrigen = vi.getLienzo().getImage();
                if (imgOrigen != null) {
                    try {
                        SimplyRGBOp lelop = new SimplyRGBOp();
                        lelop.filter(imgOrigen, imgOrigen);                        
                        vi.repaint();

                    } catch (Exception e) {
                        System.err.println(e.getLocalizedMessage());
                    }
                }
            }
    }//GEN-LAST:event_BotonSimplyRGBActionPerformed

    private void BotonMusgoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonMusgoActionPerformed
         VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
            if (vi != null) {
                BufferedImage imgOrigen = vi.getLienzo().getImage();
                if (imgOrigen != null) {
                    try {
                        MusgoOp mop = new MusgoOp();
                        mop.filter(imgOrigen, imgOrigen);                        
                        vi.repaint();

                    } catch (Exception e) {
                        System.err.println(e.getLocalizedMessage());
                    }
                }
            }
    }//GEN-LAST:event_BotonMusgoActionPerformed

    private void MenuArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuArchivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MenuArchivoActionPerformed

    private void BotonSpookyOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSpookyOpActionPerformed
          VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
            if (vi != null) {
                BufferedImage imgOrigen = vi.getLienzo().getImage();
                if (imgOrigen != null) {
                    try {
                        SpookyOp nop = new SpookyOp();
                        nop.filter(imgOrigen, imgOrigen);                        
                        vi.repaint();

                    } catch (Exception e) {
                        System.err.println(e.getLocalizedMessage());
                    }
                }
            }
    }//GEN-LAST:event_BotonSpookyOpActionPerformed

    private void MenuArchivoGrabarAudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuArchivoGrabarAudioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MenuArchivoGrabarAudioActionPerformed

    private void MenuArchivoAbrirAudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuArchivoAbrirAudioActionPerformed
        JFileChooser dlg = new JFileChooser();
        int resp = dlg.showOpenDialog(this);
        if (resp == JFileChooser.APPROVE_OPTION) {
            try {
                //File f = dlg.getSelectedFile();
                File f = new File( dlg.getSelectedFile().getAbsolutePath() ) {
                    @Override
                    public String toString() {
                        return this.getName();
                    }
                };

                this.ListaReproduccion.addItem(f);

            } catch (Exception ex) {
                System.err.println("Error al leer la imagen");
            }
        }
    }//GEN-LAST:event_MenuArchivoAbrirAudioActionPerformed

    SMPlayer player = null;
    SMRecorder recorder = null;
    private void BotonPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonPlayActionPerformed
        File f = (File) this.ListaReproduccion.getSelectedItem();
        if (f != null) {
            player = new SMClipPlayer(f);
            if (player != null) {
                player.play();
            }
        }
    }//GEN-LAST:event_BotonPlayActionPerformed

    private void BotonPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonPauseActionPerformed
            if (player != null) {
                player.stop();
            } else {
                recorder.stop();
            }
    }//GEN-LAST:event_BotonPauseActionPerformed

    private void BotonGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonGrabarActionPerformed
        JFileChooser dlg = new JFileChooser();
            int resp = dlg.showSaveDialog(this);
            if (resp == JFileChooser.APPROVE_OPTION) {
                try {
                    File f = new File(dlg.getSelectedFile().getAbsolutePath()) {
                        @Override
                        public String toString() {
                            return this.getName();
                        }
                    };
                    recorder = new SMSoundRecorder(f);
                    if (recorder != null) {
                        recorder.record();
                        this.ListaReproduccion.addItem(f);
                    }


                } catch (Exception ex) {
                    System.err.println("Error al guardar el audio");
                }    
        
        recorder.record();
            }
    }//GEN-LAST:event_BotonGrabarActionPerformed
    public void SetEtiquetaValorRGB(String R, String G, String B) {                                               
        
        EtiquetaValorRGB.setText("R:".concat(R).concat(" G:").concat(G).concat(" B:").concat(B));

    }

    class ManejadorAudio implements LineListener {

        @Override
        public void update(LineEvent event) {
            if (event.getType() == LineEvent.Type.START) {
                
            }
            if (event.getType() == LineEvent.Type.STOP) {
                
            }
            if (event.getType() == LineEvent.Type.CLOSE) {
                
            }
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
     
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar BarraDeMenu;
    private javax.swing.JButton BotonAbrir;
    private javax.swing.JToggleButton BotonAlisar;
    private javax.swing.JButton BotonAmarillo;
    private javax.swing.JButton BotonAzul;
    private javax.swing.JButton BotonBandas;
    private javax.swing.JButton BotonBlanco;
    private javax.swing.JButton BotonContraste2;
    private javax.swing.JButton BotonContraste3;
    private javax.swing.JToggleButton BotonEditar;
    private javax.swing.JButton BotonGrabar;
    private javax.swing.JButton BotonGuardar;
    private javax.swing.JButton BotonHerramientasAbrir;
    private javax.swing.JToggleButton BotonLinea;
    private javax.swing.JButton BotonMasEscala;
    private javax.swing.JButton BotonMenosEscala;
    private javax.swing.JButton BotonMusgo;
    private javax.swing.JButton BotonNegro;
    private javax.swing.JToggleButton BotonOvalo;
    private javax.swing.JButton BotonPause;
    private javax.swing.JButton BotonPlay;
    private javax.swing.JToggleButton BotonPunto;
    private javax.swing.JToggleButton BotonRectangulo;
    private javax.swing.JToggleButton BotonRelleno;
    private javax.swing.JButton BotonRojo;
    private javax.swing.JButton BotonRotacion180;
    private javax.swing.JButton BotonRotacion270;
    private javax.swing.JButton BotonRotacion90;
    private javax.swing.JButton BotonSeno;
    private javax.swing.JButton BotonSeno1;
    private javax.swing.JButton BotonSeno2;
    private javax.swing.JButton BotonSepia;
    private javax.swing.JButton BotonSimplyRGB;
    private javax.swing.JButton BotonSpookyOp;
    private javax.swing.JToggleButton BotonTransparecnia;
    private javax.swing.JButton BotonVerde;
    private javax.swing.JButton BottonContraste1;
    private javax.swing.JComboBox<String> ComboBoxEspacioColor;
    private javax.swing.JComboBox<String> ComboBoxFiltros;
    private javax.swing.JLabel EtiquetaForma;
    private javax.swing.JLabel EtiquetaValorRGB;
    private javax.swing.JComboBox<File> ListaReproduccion;
    private javax.swing.JMenu MenuArchivo;
    private javax.swing.JMenuItem MenuArchivoAbrirAudio;
    private javax.swing.JMenuItem MenuArchivoGrabarAudio;
    private javax.swing.JMenu MenuEdicion;
    private javax.swing.JMenu MenuImagen;
    private javax.swing.JMenuItem MenuImagenAffineOp;
    private javax.swing.JMenuItem MenuImagenConvolveOP;
    private javax.swing.JMenuItem MenuImagenLookUpOp;
    private javax.swing.JMenuItem MenuImagenLookupSeno;
    private javax.swing.JMenuItem MenuImagenRescaleOP;
    private javax.swing.JMenuItem MenuItemArchivoAbrir;
    private javax.swing.JMenuItem MenuItemArchivoGuardar;
    private javax.swing.JMenuItem MenuItemArchivoNuevo;
    private javax.swing.JCheckBoxMenuItem MenuItemEdicionAtributos;
    private javax.swing.JCheckBoxMenuItem MenuItemEdicionEstado;
    private javax.swing.JCheckBoxMenuItem MenuItemEdicionFormas;
    private javax.swing.JPanel PaneBrillo;
    private javax.swing.JPanel PanelColor;
    private javax.swing.JPanel PanelColores;
    private javax.swing.JPanel PanelContraste;
    private javax.swing.JPanel PanelEfectos;
    private javax.swing.JPanel PanelEscala;
    private javax.swing.JPanel PanelEstado;
    private javax.swing.JPanel PanelFiltro;
    private javax.swing.JToolBar PanelFormas;
    private javax.swing.JPanel PanelHerramientas;
    private javax.swing.JPanel PanelRotacion;
    private javax.swing.JPanel PanelSeno;
    private javax.swing.JSlider SliderBrillo;
    private javax.swing.JSlider SliderRotacion;
    private javax.swing.JSpinner SpinnerGrosor;
    private javax.swing.JDesktopPane escritorio;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    // End of variables declaration//GEN-END:variables
}
